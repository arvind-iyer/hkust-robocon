; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\pid_vel.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\pid_vel.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I"C:\Users\Kenneth Au\Desktop\toKenneth\Complicated Big Motor Control\(encoder)24V Big Blue Black Motor Control June 7\RTE" -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=513 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\obj\pid_vel.crf user\pid_vel.c]
                          THUMB

                          AREA ||i.ADC_calibration||, CODE, READONLY, ALIGN=2

                  ADC_calibration PROC
;;;277    extern vu16  ADC_ConvertedValue[];
;;;278    void ADC_calibration(void)
000000  b510              PUSH     {r4,lr}
;;;279    {
;;;280    	if (!cali_done)
000002  4828              LDR      r0,|L1.164|
000004  7800              LDRB     r0,[r0,#0]  ; cali_done
000006  2800              CMP      r0,#0
000008  d14a              BNE      |L1.160|
;;;281    	{
;;;282    		if (tim_counter<5000)
00000a  4827              LDR      r0,|L1.168|
00000c  8800              LDRH     r0,[r0,#0]  ; tim_counter
00000e  f2413188          MOV      r1,#0x1388
000012  4288              CMP      r0,r1
000014  da1d              BGE      |L1.82|
;;;283    		{
;;;284    			ADC_offset[0]+=ADC_ConvertedValue[0];
000016  4925              LDR      r1,|L1.172|
000018  8808              LDRH     r0,[r1,#0]  ; ADC_ConvertedValue
00001a  f7fffffe          BL       __aeabi_ui2f
00001e  4604              MOV      r4,r0
000020  4823              LDR      r0,|L1.176|
000022  6801              LDR      r1,[r0,#0]  ; ADC_offset
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       __aeabi_fadd
00002a  4921              LDR      r1,|L1.176|
00002c  6008              STR      r0,[r1,#0]  ; ADC_offset
;;;285    			ADC_offset[1]+=ADC_ConvertedValue[1];
00002e  491f              LDR      r1,|L1.172|
000030  8848              LDRH     r0,[r1,#2]  ; ADC_ConvertedValue
000032  f7fffffe          BL       __aeabi_ui2f
000036  4604              MOV      r4,r0
000038  481d              LDR      r0,|L1.176|
00003a  6841              LDR      r1,[r0,#4]  ; ADC_offset
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       __aeabi_fadd
000042  491b              LDR      r1,|L1.176|
000044  6048              STR      r0,[r1,#4]  ; ADC_offset
;;;286    			tim_counter++;
000046  4818              LDR      r0,|L1.168|
000048  8800              LDRH     r0,[r0,#0]  ; tim_counter
00004a  1c40              ADDS     r0,r0,#1
00004c  4916              LDR      r1,|L1.168|
00004e  8008              STRH     r0,[r1,#0]
000050  e026              B        |L1.160|
                  |L1.82|
;;;287    		}
;;;288    		else 
;;;289    		{
;;;290    			ADC_offset[0]/=5000;
000052  4917              LDR      r1,|L1.176|
000054  6808              LDR      r0,[r1,#0]  ; ADC_offset
000056  4917              LDR      r1,|L1.180|
000058  f7fffffe          BL       __aeabi_fdiv
00005c  4914              LDR      r1,|L1.176|
00005e  6008              STR      r0,[r1,#0]  ; ADC_offset
;;;291    			ADC_offset[1]/=5000;
000060  6848              LDR      r0,[r1,#4]  ; ADC_offset
000062  4914              LDR      r1,|L1.180|
000064  f7fffffe          BL       __aeabi_fdiv
000068  4911              LDR      r1,|L1.176|
00006a  6048              STR      r0,[r1,#4]  ; ADC_offset
;;;292    			if ((ADC_offset[0]>1400 && ADC_offset[0]<1700)
00006c  6808              LDR      r0,[r1,#0]  ; ADC_offset
00006e  4912              LDR      r1,|L1.184|
000070  f7fffffe          BL       __aeabi_cfrcmple
000074  d214              BCS      |L1.160|
000076  490e              LDR      r1,|L1.176|
000078  6808              LDR      r0,[r1,#0]  ; ADC_offset
00007a  4910              LDR      r1,|L1.188|
00007c  f7fffffe          BL       __aeabi_cfcmple
000080  d20e              BCS      |L1.160|
;;;293    			&&  (ADC_offset[1]>1400 && ADC_offset[1]<1700))
000082  490b              LDR      r1,|L1.176|
000084  6848              LDR      r0,[r1,#4]  ; ADC_offset
000086  490c              LDR      r1,|L1.184|
000088  f7fffffe          BL       __aeabi_cfrcmple
00008c  d208              BCS      |L1.160|
00008e  4908              LDR      r1,|L1.176|
000090  6848              LDR      r0,[r1,#4]  ; ADC_offset
000092  490a              LDR      r1,|L1.188|
000094  f7fffffe          BL       __aeabi_cfcmple
000098  d202              BCS      |L1.160|
;;;294    				cali_done=1;
00009a  2001              MOVS     r0,#1
00009c  4901              LDR      r1,|L1.164|
00009e  7008              STRB     r0,[r1,#0]
                  |L1.160|
;;;295    		}
;;;296    	 }
;;;297    }
0000a0  bd10              POP      {r4,pc}
;;;298    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L1.164|
                          DCD      cali_done
                  |L1.168|
                          DCD      tim_counter
                  |L1.172|
                          DCD      ADC_ConvertedValue
                  |L1.176|
                          DCD      ADC_offset
                  |L1.180|
                          DCD      0x459c4000
                  |L1.184|
                          DCD      0x44af0000
                  |L1.188|
                          DCD      0x44d48000

                          AREA ||i.cali_user||, CODE, READONLY, ALIGN=2

                  cali_user PROC
;;;551    
;;;552    void cali_user()
000000  2006              MOVS     r0,#6
;;;553    {
;;;554    	enable_bar=6;
000002  4901              LDR      r1,|L2.8|
000004  7008              STRB     r0,[r1,#0]
;;;555    }
000006  4770              BX       lr
;;;556    
                          ENDP

                  |L2.8|
                          DCD      enable_bar

                          AREA ||i.clear_record||, CODE, READONLY, ALIGN=2

                  clear_record PROC
;;;120    // sub component
;;;121    void clear_record(void)
000000  2000              MOVS     r0,#0
;;;122    {
;;;123        err_curr=0;
000002  490c              LDR      r1,|L3.52|
000004  6008              STR      r0,[r1,#0]  ; err_curr
;;;124    	err_prev1=0;
000006  490c              LDR      r1,|L3.56|
000008  6008              STR      r0,[r1,#0]  ; err_prev1
;;;125    	err_prev2=0;
00000a  490c              LDR      r1,|L3.60|
00000c  6008              STR      r0,[r1,#0]  ; err_prev2
;;;126    
;;;127    	err_curr_pos=0;
00000e  490c              LDR      r1,|L3.64|
000010  6008              STR      r0,[r1,#0]  ; err_curr_pos
;;;128    	err_prev1_pos=0;
000012  490c              LDR      r1,|L3.68|
000014  6008              STR      r0,[r1,#0]  ; err_prev1_pos
;;;129    	err_prev2_pos=0;
000016  490c              LDR      r1,|L3.72|
000018  6008              STR      r0,[r1,#0]  ; err_prev2_pos
;;;130    
;;;131    	cal_P=0;
00001a  490c              LDR      r1,|L3.76|
00001c  6008              STR      r0,[r1,#0]  ; cal_P
;;;132    	cal_I=0;
00001e  490c              LDR      r1,|L3.80|
000020  6008              STR      r0,[r1,#0]  ; cal_I
;;;133    	cal_D=0;
000022  490c              LDR      r1,|L3.84|
000024  6008              STR      r0,[r1,#0]  ; cal_D
;;;134    	PID=0;
000026  490c              LDR      r1,|L3.88|
000028  6008              STR      r0,[r1,#0]  ; PID
;;;135    
;;;136    	pwm=0;
00002a  490c              LDR      r1,|L3.92|
00002c  6008              STR      r0,[r1,#0]  ; pwm
;;;137    
;;;138    	reach_token = 0;
00002e  490c              LDR      r1,|L3.96|
000030  7008              STRB     r0,[r1,#0]
;;;139    }
000032  4770              BX       lr
;;;140    
                          ENDP

                  |L3.52|
                          DCD      err_curr
                  |L3.56|
                          DCD      err_prev1
                  |L3.60|
                          DCD      err_prev2
                  |L3.64|
                          DCD      err_curr_pos
                  |L3.68|
                          DCD      err_prev1_pos
                  |L3.72|
                          DCD      err_prev2_pos
                  |L3.76|
                          DCD      cal_P
                  |L3.80|
                          DCD      cal_I
                  |L3.84|
                          DCD      cal_D
                  |L3.88|
                          DCD      PID
                  |L3.92|
                          DCD      pwm
                  |L3.96|
                          DCD      reach_token

                          AREA ||i.current_circle||, CODE, READONLY, ALIGN=2

                  current_circle PROC
;;;334    
;;;335    void current_circle(float p, float i, float d)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;336    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;337    	I_err_curr=current_input-motor_current;
00000a  4837              LDR      r0,|L4.232|
00000c  6801              LDR      r1,[r0,#0]  ; motor_current
00000e  4837              LDR      r0,|L4.236|
000010  6800              LDR      r0,[r0,#0]  ; current_input
000012  f7fffffe          BL       __aeabi_fsub
000016  4936              LDR      r1,|L4.240|
000018  6008              STR      r0,[r1,#0]  ; I_err_curr
;;;338    
;;;339        I_cal_P = p * (I_err_curr - I_err_prev1);
00001a  4836              LDR      r0,|L4.244|
00001c  6801              LDR      r1,[r0,#0]  ; I_err_prev1
00001e  4834              LDR      r0,|L4.240|
000020  6800              LDR      r0,[r0,#0]  ; I_err_curr
000022  f7fffffe          BL       __aeabi_fsub
000026  4607              MOV      r7,r0
000028  4621              MOV      r1,r4
00002a  f7fffffe          BL       __aeabi_fmul
00002e  4932              LDR      r1,|L4.248|
000030  6008              STR      r0,[r1,#0]  ; I_cal_P
;;;340    	I_cal_I = i * I_err_curr;
000032  482f              LDR      r0,|L4.240|
000034  6801              LDR      r1,[r0,#0]  ; I_err_curr
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       __aeabi_fmul
00003c  492f              LDR      r1,|L4.252|
00003e  6008              STR      r0,[r1,#0]  ; I_cal_I
;;;341    	I_cal_D = d * (I_err_curr + I_err_prev2 - 2*I_err_prev1);
000040  482c              LDR      r0,|L4.244|
000042  6801              LDR      r1,[r0,#0]  ; I_err_prev1
000044  f04f4080          MOV      r0,#0x40000000
000048  f7fffffe          BL       __aeabi_fmul
00004c  4680              MOV      r8,r0
00004e  482c              LDR      r0,|L4.256|
000050  6801              LDR      r1,[r0,#0]  ; I_err_prev2
000052  4827              LDR      r0,|L4.240|
000054  6800              LDR      r0,[r0,#0]  ; I_err_curr
000056  f7fffffe          BL       __aeabi_fadd
00005a  4681              MOV      r9,r0
00005c  4641              MOV      r1,r8
00005e  f7fffffe          BL       __aeabi_fsub
000062  4607              MOV      r7,r0
000064  4631              MOV      r1,r6
000066  f7fffffe          BL       __aeabi_fmul
00006a  4926              LDR      r1,|L4.260|
00006c  6008              STR      r0,[r1,#0]  ; I_cal_D
;;;342    
;;;343    	I_err_prev2 = I_err_prev1;
00006e  4821              LDR      r0,|L4.244|
000070  6800              LDR      r0,[r0,#0]  ; I_err_prev1
000072  4923              LDR      r1,|L4.256|
000074  6008              STR      r0,[r1,#0]  ; I_err_prev2
;;;344    	I_err_prev1 = I_err_curr;
000076  481e              LDR      r0,|L4.240|
000078  6800              LDR      r0,[r0,#0]  ; I_err_curr
00007a  491e              LDR      r1,|L4.244|
00007c  6008              STR      r0,[r1,#0]  ; I_err_prev1
;;;345    		
;;;346    	I_PID = I_cal_P + I_cal_I + I_cal_D;
00007e  481f              LDR      r0,|L4.252|
000080  6801              LDR      r1,[r0,#0]  ; I_cal_I
000082  481d              LDR      r0,|L4.248|
000084  6800              LDR      r0,[r0,#0]  ; I_cal_P
000086  f7fffffe          BL       __aeabi_fadd
00008a  4607              MOV      r7,r0
00008c  481d              LDR      r0,|L4.260|
00008e  6801              LDR      r1,[r0,#0]  ; I_cal_D
000090  4638              MOV      r0,r7
000092  f7fffffe          BL       __aeabi_fadd
000096  491c              LDR      r1,|L4.264|
000098  6008              STR      r0,[r1,#0]  ; I_PID
;;;347    
;;;348    	pwm = pwm + I_PID;
00009a  4608              MOV      r0,r1
00009c  6801              LDR      r1,[r0,#0]  ; I_PID
00009e  481b              LDR      r0,|L4.268|
0000a0  6800              LDR      r0,[r0,#0]  ; pwm
0000a2  f7fffffe          BL       __aeabi_fadd
0000a6  4919              LDR      r1,|L4.268|
0000a8  6008              STR      r0,[r1,#0]  ; pwm
;;;349    
;;;350    	dir = (pwm>0)?1:0;					  
0000aa  2100              MOVS     r1,#0
0000ac  4817              LDR      r0,|L4.268|
0000ae  6800              LDR      r0,[r0,#0]  ; pwm
0000b0  f7fffffe          BL       __aeabi_cfrcmple
0000b4  d201              BCS      |L4.186|
0000b6  2001              MOVS     r0,#1
0000b8  e000              B        |L4.188|
                  |L4.186|
0000ba  2000              MOVS     r0,#0
                  |L4.188|
0000bc  4914              LDR      r1,|L4.272|
0000be  7008              STRB     r0,[r1,#0]
;;;351    
;;;352    	if(pwm > MAX_PWM)	pwm = MAX_PWM;
0000c0  4914              LDR      r1,|L4.276|
0000c2  4812              LDR      r0,|L4.268|
0000c4  6800              LDR      r0,[r0,#0]  ; pwm
0000c6  f7fffffe          BL       __aeabi_cfrcmple
0000ca  d202              BCS      |L4.210|
0000cc  4811              LDR      r0,|L4.276|
0000ce  490f              LDR      r1,|L4.268|
0000d0  6008              STR      r0,[r1,#0]  ; pwm
                  |L4.210|
;;;353    	if(pwm < -MAX_PWM)   pwm = -MAX_PWM;
0000d2  4911              LDR      r1,|L4.280|
0000d4  480d              LDR      r0,|L4.268|
0000d6  6800              LDR      r0,[r0,#0]  ; pwm
0000d8  f7fffffe          BL       __aeabi_cfcmple
0000dc  d202              BCS      |L4.228|
0000de  480e              LDR      r0,|L4.280|
0000e0  490a              LDR      r1,|L4.268|
0000e2  6008              STR      r0,[r1,#0]  ; pwm
                  |L4.228|
;;;354    
;;;355    }	
0000e4  e8bd87f0          POP      {r4-r10,pc}
;;;356    
                          ENDP

                  |L4.232|
                          DCD      motor_current
                  |L4.236|
                          DCD      current_input
                  |L4.240|
                          DCD      I_err_curr
                  |L4.244|
                          DCD      I_err_prev1
                  |L4.248|
                          DCD      I_cal_P
                  |L4.252|
                          DCD      I_cal_I
                  |L4.256|
                          DCD      I_err_prev2
                  |L4.260|
                          DCD      I_cal_D
                  |L4.264|
                          DCD      I_PID
                  |L4.268|
                          DCD      pwm
                  |L4.272|
                          DCD      ||dir||
                  |L4.276|
                          DCD      0x44e0e000
                  |L4.280|
                          DCD      0xc4e0e000

                          AREA ||i.get_current||, CODE, READONLY, ALIGN=2

                  get_current PROC
;;;313    
;;;314    void get_current(void)
000000  b570              PUSH     {r4-r6,lr}
;;;315    {
;;;316    	current_stream[0]=-ADC_ConvertedValue[0]+ADC_offset[0];
000002  4918              LDR      r1,|L5.100|
000004  8809              LDRH     r1,[r1,#0]  ; ADC_ConvertedValue
000006  4248              RSBS     r0,r1,#0
000008  f7fffffe          BL       __aeabi_i2f
00000c  4604              MOV      r4,r0
00000e  4816              LDR      r0,|L5.104|
000010  6801              LDR      r1,[r0,#0]  ; ADC_offset
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       __aeabi_fadd
000018  4914              LDR      r1,|L5.108|
00001a  6008              STR      r0,[r1,#0]  ; current_stream
;;;317    	current_stream[1]=-ADC_ConvertedValue[1]+ADC_offset[1];
00001c  4911              LDR      r1,|L5.100|
00001e  8849              LDRH     r1,[r1,#2]  ; ADC_ConvertedValue
000020  4248              RSBS     r0,r1,#0
000022  f7fffffe          BL       __aeabi_i2f
000026  4604              MOV      r4,r0
000028  480f              LDR      r0,|L5.104|
00002a  6841              LDR      r1,[r0,#4]  ; ADC_offset
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       __aeabi_fadd
000032  490e              LDR      r1,|L5.108|
000034  6048              STR      r0,[r1,#4]  ; current_stream
;;;318    
;;;319    	if (abs(current_stream[0])>abs(current_stream[1]))
000036  6848              LDR      r0,[r1,#4]  ; current_stream
000038  f7fffffe          BL       abs
00003c  4604              MOV      r4,r0
00003e  490b              LDR      r1,|L5.108|
000040  6808              LDR      r0,[r1,#0]  ; current_stream
000042  f7fffffe          BL       abs
000046  4605              MOV      r5,r0
000048  4621              MOV      r1,r4
00004a  f7fffffe          BL       __aeabi_cfrcmple
00004e  d204              BCS      |L5.90|
;;;320    		motor_current=current_stream[0];
000050  4806              LDR      r0,|L5.108|
000052  6800              LDR      r0,[r0,#0]  ; current_stream
000054  4906              LDR      r1,|L5.112|
000056  6008              STR      r0,[r1,#0]  ; motor_current
000058  e003              B        |L5.98|
                  |L5.90|
;;;321    	else
;;;322    		motor_current=current_stream[1];
00005a  4804              LDR      r0,|L5.108|
00005c  6840              LDR      r0,[r0,#4]  ; current_stream
00005e  4904              LDR      r1,|L5.112|
000060  6008              STR      r0,[r1,#0]  ; motor_current
                  |L5.98|
;;;323    /*
;;;324    	if (current_memory_index<9)
;;;325    		current_memory_index++;
;;;326    	else
;;;327    		current_memory_index=0;
;;;328    
;;;329    	current_memory_sum-=current_memory[current_memory_index];
;;;330    	current_memory[current_memory_index]=motor_current;
;;;331    	current_memory_sum+=current_memory[current_memory_index];
;;;332    */	
;;;333    }
000062  bd70              POP      {r4-r6,pc}
;;;334    
                          ENDP

                  |L5.100|
                          DCD      ADC_ConvertedValue
                  |L5.104|
                          DCD      ADC_offset
                  |L5.108|
                          DCD      current_stream
                  |L5.112|
                          DCD      motor_current

                          AREA ||i.increase_encoder||, CODE, READONLY, ALIGN=2

                  increase_encoder PROC
;;;562    // comm with main board for debugging
;;;563    void increase_encoder(void)
000000  b510              PUSH     {r4,lr}
;;;564    {
;;;565        abs_encoder+=(s32)(d_count);
000002  4805              LDR      r0,|L6.24|
000004  6800              LDR      r0,[r0,#0]  ; d_count
000006  f7fffffe          BL       __aeabi_f2iz
00000a  4904              LDR      r1,|L6.28|
00000c  6809              LDR      r1,[r1,#0]  ; abs_encoder
00000e  4408              ADD      r0,r0,r1
000010  4902              LDR      r1,|L6.28|
000012  6008              STR      r0,[r1,#0]  ; abs_encoder
;;;566    }
000014  bd10              POP      {r4,pc}
;;;567    
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      d_count
                  |L6.28|
                          DCD      abs_encoder

                          AREA ||i.init_memory||, CODE, READONLY, ALIGN=2

                  init_memory PROC
;;;141    
;;;142    void init_memory(void)
000000  2000              MOVS     r0,#0
;;;143    {
;;;144    	int i=0;
;;;145    	for (i=0; i<MEMORY_SIZE; i++)
000002  bf00              NOP      
000004  e004              B        |L7.16|
                  |L7.6|
;;;146    	{
;;;147    		dcount_memory[i]=0;
000006  2100              MOVS     r1,#0
000008  4a03              LDR      r2,|L7.24|
00000a  f8421020          STR      r1,[r2,r0,LSL #2]
00000e  1c40              ADDS     r0,r0,#1              ;145
                  |L7.16|
000010  2814              CMP      r0,#0x14              ;145
000012  dbf8              BLT      |L7.6|
;;;148    	}
;;;149    /*
;;;150    	for (i=0; i<10; i++)
;;;151    	{
;;;152    		current_memory[i]=0;
;;;153    	}
;;;154    */
;;;155    }
000014  4770              BX       lr
;;;156    
                          ENDP

000016  0000              DCW      0x0000
                  |L7.24|
                          DCD      dcount_memory

                          AREA ||i.motor_lock||, CODE, READONLY, ALIGN=2

                  motor_lock PROC
;;;540    // function	called by user
;;;541    void motor_lock()
000000  2002              MOVS     r0,#2
;;;542    {
;;;543        enable_bar=2;
000002  4901              LDR      r1,|L8.8|
000004  7008              STRB     r0,[r1,#0]
;;;544    }
000006  4770              BX       lr
;;;545    
                          ENDP

                  |L8.8|
                          DCD      enable_bar

                          AREA ||i.motor_set_pwm||, CODE, READONLY, ALIGN=2

                  motor_set_pwm PROC
;;;517    // function	called by user
;;;518    void motor_set_pwm(float user_pwm)
000000  b510              PUSH     {r4,lr}
;;;519    {
000002  4604              MOV      r4,r0
;;;520    	enable_bar=5;
000004  2005              MOVS     r0,#5
000006  4907              LDR      r1,|L9.36|
000008  7008              STRB     r0,[r1,#0]
;;;521    
;;;522    	set_pwm=user_pwm;
00000a  4807              LDR      r0,|L9.40|
00000c  6004              STR      r4,[r0,#0]  ; set_pwm
;;;523    	set_dir = (user_pwm>=0)?1:0;
00000e  2100              MOVS     r1,#0
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       __aeabi_cfrcmple
000016  d801              BHI      |L9.28|
000018  2001              MOVS     r0,#1
00001a  e000              B        |L9.30|
                  |L9.28|
00001c  2000              MOVS     r0,#0
                  |L9.30|
00001e  4903              LDR      r1,|L9.44|
000020  7008              STRB     r0,[r1,#0]
;;;524    }
000022  bd10              POP      {r4,pc}
;;;525    
                          ENDP

                  |L9.36|
                          DCD      enable_bar
                  |L9.40|
                          DCD      set_pwm
                  |L9.44|
                          DCD      set_dir

                          AREA ||i.motor_set_pwm_current||, CODE, READONLY, ALIGN=2

                  motor_set_pwm_current PROC
;;;525    
;;;526    void motor_set_pwm_current(float user_pwm)
000000  2104              MOVS     r1,#4
;;;527    {
;;;528    	enable_bar=4;
000002  4a02              LDR      r2,|L10.12|
000004  7011              STRB     r1,[r2,#0]
;;;529    
;;;530    	pwm_current=user_pwm;
000006  4902              LDR      r1,|L10.16|
000008  6008              STR      r0,[r1,#0]  ; pwm_current
;;;531    }
00000a  4770              BX       lr
;;;532    
                          ENDP

                  |L10.12|
                          DCD      enable_bar
                  |L10.16|
                          DCD      pwm_current

                          AREA ||i.motor_set_speed||, CODE, READONLY, ALIGN=2

                  motor_set_speed PROC
;;;533    // function	called by user
;;;534    void motor_set_speed(float speed)
000000  2101              MOVS     r1,#1
;;;535    {
;;;536        enable_bar=1;
000002  4a02              LDR      r2,|L11.12|
000004  7011              STRB     r1,[r2,#0]
;;;537        user_speed=speed;
000006  4902              LDR      r1,|L11.16|
000008  6008              STR      r0,[r1,#0]  ; user_speed
;;;538    }
00000a  4770              BX       lr
;;;539    	
                          ENDP

                  |L11.12|
                          DCD      enable_bar
                  |L11.16|
                          DCD      user_speed

                          AREA ||i.motor_zero||, CODE, READONLY, ALIGN=2

                  motor_zero PROC
;;;546    // function	called by user
;;;547    void motor_zero()
000000  2000              MOVS     r0,#0
;;;548    {
;;;549        enable_bar=0;
000002  4901              LDR      r1,|L12.8|
000004  7008              STRB     r0,[r1,#0]
;;;550    }
000006  4770              BX       lr
;;;551    
                          ENDP

                  |L12.8|
                          DCD      enable_bar

                          AREA ||i.read_encoder||, CODE, READONLY, ALIGN=2

                  read_encoder PROC
;;;157    // sub component
;;;158    void read_encoder(void)
000000  b570              PUSH     {r4-r6,lr}
;;;159    {
;;;160    	count = TIM_GetCounter(TIM2);
000002  f04f4080          MOV      r0,#0x40000000
000006  f7fffffe          BL       TIM_GetCounter
00000a  4604              MOV      r4,r0
00000c  f7fffffe          BL       __aeabi_ui2f
000010  493d              LDR      r1,|L13.264|
000012  6008              STR      r0,[r1,#0]  ; count
;;;161    	if (count>62768)
000014  493d              LDR      r1,|L13.268|
000016  483c              LDR      r0,|L13.264|
000018  6800              LDR      r0,[r0,#0]  ; count
00001a  f7fffffe          BL       __aeabi_cfrcmple
00001e  d21b              BCS      |L13.88|
;;;162    	{
;;;163    		s32 offset=count-30000;
000020  493b              LDR      r1,|L13.272|
000022  4839              LDR      r0,|L13.264|
000024  6800              LDR      r0,[r0,#0]  ; count
000026  f7fffffe          BL       __aeabi_fsub
00002a  4605              MOV      r5,r0
00002c  f7fffffe          BL       __aeabi_f2iz
000030  4604              MOV      r4,r0
;;;164    		count=offset;
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       __aeabi_i2f
000038  4933              LDR      r1,|L13.264|
00003a  6008              STR      r0,[r1,#0]  ; count
;;;165    		TIM_SetCounter(TIM2, offset);
00003c  b2a1              UXTH     r1,r4
00003e  f04f4080          MOV      r0,#0x40000000
000042  f7fffffe          BL       TIM_SetCounter
;;;166    		d_carrier++;
000046  f04f517e          MOV      r1,#0x3f800000
00004a  4832              LDR      r0,|L13.276|
00004c  6800              LDR      r0,[r0,#0]  ; d_carrier
00004e  f7fffffe          BL       __aeabi_fadd
000052  4930              LDR      r1,|L13.276|
000054  6008              STR      r0,[r1,#0]  ; d_carrier
;;;167    	}
000056  e021              B        |L13.156|
                  |L13.88|
;;;168    	else if (count<2768)
000058  492f              LDR      r1,|L13.280|
00005a  482b              LDR      r0,|L13.264|
00005c  6800              LDR      r0,[r0,#0]  ; count
00005e  f7fffffe          BL       __aeabi_cfcmple
000062  d21b              BCS      |L13.156|
;;;169    	{
;;;170    		s32 offset=count+30000;
000064  492a              LDR      r1,|L13.272|
000066  4828              LDR      r0,|L13.264|
000068  6800              LDR      r0,[r0,#0]  ; count
00006a  f7fffffe          BL       __aeabi_fadd
00006e  4605              MOV      r5,r0
000070  f7fffffe          BL       __aeabi_f2iz
000074  4604              MOV      r4,r0
;;;171    		count=offset;
000076  4620              MOV      r0,r4
000078  f7fffffe          BL       __aeabi_i2f
00007c  4922              LDR      r1,|L13.264|
00007e  6008              STR      r0,[r1,#0]  ; count
;;;172    		TIM_SetCounter(TIM2, offset);
000080  b2a1              UXTH     r1,r4
000082  f04f4080          MOV      r0,#0x40000000
000086  f7fffffe          BL       TIM_SetCounter
;;;173    		d_carrier--;
00008a  f04f517e          MOV      r1,#0x3f800000
00008e  4821              LDR      r0,|L13.276|
000090  6800              LDR      r0,[r0,#0]  ; d_carrier
000092  f7fffffe          BL       __aeabi_fsub
000096  491f              LDR      r1,|L13.276|
000098  6008              STR      r0,[r1,#0]  ; d_carrier
;;;174    	}
00009a  bf00              NOP      
                  |L13.156|
;;;175    	
;;;176    	d_cal =	d_carrier*30000+count-32768;				
00009c  491c              LDR      r1,|L13.272|
00009e  481d              LDR      r0,|L13.276|
0000a0  6800              LDR      r0,[r0,#0]  ; d_carrier
0000a2  f7fffffe          BL       __aeabi_fmul
0000a6  4605              MOV      r5,r0
0000a8  4817              LDR      r0,|L13.264|
0000aa  6801              LDR      r1,[r0,#0]  ; count
0000ac  4628              MOV      r0,r5
0000ae  f7fffffe          BL       __aeabi_fadd
0000b2  4604              MOV      r4,r0
0000b4  f04f418e          MOV      r1,#0x47000000
0000b8  f7fffffe          BL       __aeabi_fsub
0000bc  4917              LDR      r1,|L13.284|
0000be  6008              STR      r0,[r1,#0]  ; d_cal
;;;177    	d_count = -d_cal + dcount_memory[memory_index];
0000c0  4608              MOV      r0,r1
0000c2  6800              LDR      r0,[r0,#0]  ; d_cal
0000c4  f0804400          EOR      r4,r0,#0x80000000
0000c8  4815              LDR      r0,|L13.288|
0000ca  4a16              LDR      r2,|L13.292|
0000cc  8812              LDRH     r2,[r2,#0]  ; memory_index
0000ce  f8501022          LDR      r1,[r0,r2,LSL #2]
0000d2  4620              MOV      r0,r4
0000d4  f7fffffe          BL       __aeabi_fadd
0000d8  4913              LDR      r1,|L13.296|
0000da  6008              STR      r0,[r1,#0]  ; d_count
;;;178    
;;;179    	dcount_memory[memory_index]=d_cal;
0000dc  480f              LDR      r0,|L13.284|
0000de  6800              LDR      r0,[r0,#0]  ; d_cal
0000e0  490f              LDR      r1,|L13.288|
0000e2  4a10              LDR      r2,|L13.292|
0000e4  8812              LDRH     r2,[r2,#0]  ; memory_index
0000e6  f8410022          STR      r0,[r1,r2,LSL #2]
;;;180    	
;;;181    	if (memory_index>MEMORY_SIZE-2)
0000ea  480e              LDR      r0,|L13.292|
0000ec  8800              LDRH     r0,[r0,#0]  ; memory_index
0000ee  2812              CMP      r0,#0x12
0000f0  dd03              BLE      |L13.250|
;;;182    		memory_index=0;
0000f2  2000              MOVS     r0,#0
0000f4  490b              LDR      r1,|L13.292|
0000f6  8008              STRH     r0,[r1,#0]
0000f8  e004              B        |L13.260|
                  |L13.250|
;;;183    	else
;;;184    		memory_index++;
0000fa  480a              LDR      r0,|L13.292|
0000fc  8800              LDRH     r0,[r0,#0]  ; memory_index
0000fe  1c40              ADDS     r0,r0,#1
000100  4908              LDR      r1,|L13.292|
000102  8008              STRH     r0,[r1,#0]
                  |L13.260|
;;;185    }
000104  bd70              POP      {r4-r6,pc}
;;;186    
                          ENDP

000106  0000              DCW      0x0000
                  |L13.264|
                          DCD      count
                  |L13.268|
                          DCD      0x47753000
                  |L13.272|
                          DCD      0x46ea6000
                  |L13.276|
                          DCD      d_carrier
                  |L13.280|
                          DCD      0x452d0000
                  |L13.284|
                          DCD      d_cal
                  |L13.288|
                          DCD      dcount_memory
                  |L13.292|
                          DCD      memory_index
                  |L13.296|
                          DCD      d_count

                          AREA ||i.set_acceleration||, CODE, READONLY, ALIGN=2

                  set_acceleration PROC
;;;556    
;;;557    void set_acceleration(u16 value)
000000  b570              PUSH     {r4-r6,lr}
;;;558    {
000002  4604              MOV      r4,r0
;;;559    	increment=((float)(value))/1000;
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       __aeabi_ui2f
00000a  4605              MOV      r5,r0
00000c  4902              LDR      r1,|L14.24|
00000e  f7fffffe          BL       __aeabi_fdiv
000012  4902              LDR      r1,|L14.28|
000014  6008              STR      r0,[r1,#0]  ; increment
;;;560    }
000016  bd70              POP      {r4-r6,pc}
;;;561    
                          ENDP

                  |L14.24|
                          DCD      0x447a0000
                  |L14.28|
                          DCD      increment

                          AREA ||i.set_pwm_to_motor||, CODE, READONLY, ALIGN=2

                  set_pwm_to_motor PROC
;;;265    //sub component
;;;266    void set_pwm_to_motor(void)
000000  b570              PUSH     {r4-r6,lr}
;;;267    {	
;;;268        if (pwm>=0)
000002  2100              MOVS     r1,#0
000004  480f              LDR      r0,|L15.68|
000006  6800              LDR      r0,[r0,#0]  ; pwm
000008  f7fffffe          BL       __aeabi_cfrcmple
00000c  d80a              BHI      |L15.36|
;;;269    	    motion_set_motor(pwm,dir);
00000e  480d              LDR      r0,|L15.68|
000010  6800              LDR      r0,[r0,#0]  ; pwm
000012  f7fffffe          BL       __aeabi_f2iz
000016  4604              MOV      r4,r0
000018  480b              LDR      r0,|L15.72|
00001a  7801              LDRB     r1,[r0,#0]  ; dir
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       motion_set_motor
000022  e00d              B        |L15.64|
                  |L15.36|
;;;270        else  
;;;271    	    motion_set_motor((-1)*pwm,dir);
000024  4807              LDR      r0,|L15.68|
000026  6801              LDR      r1,[r0,#0]  ; pwm
000028  4808              LDR      r0,|L15.76|
00002a  f7fffffe          BL       __aeabi_fmul
00002e  4605              MOV      r5,r0
000030  f7fffffe          BL       __aeabi_f2iz
000034  4604              MOV      r4,r0
000036  4804              LDR      r0,|L15.72|
000038  7801              LDRB     r1,[r0,#0]  ; dir
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       motion_set_motor
                  |L15.64|
;;;272    }
000040  bd70              POP      {r4-r6,pc}
;;;273    
                          ENDP

000042  0000              DCW      0x0000
                  |L15.68|
                          DCD      pwm
                  |L15.72|
                          DCD      ||dir||
                  |L15.76|
                          DCD      0xbf800000

                          AREA ||i.vel_calculate_pwm||, CODE, READONLY, ALIGN=2

                  vel_calculate_pwm PROC
;;;233    float current_input=0;
;;;234    void vel_calculate_pwm(float p, float i, float d, u8 mode)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;235    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;236    
;;;237    	cal_P = p * (err_curr - err_prev1);
00000c  4841              LDR      r0,|L16.276|
00000e  6801              LDR      r1,[r0,#0]  ; err_prev1
000010  4841              LDR      r0,|L16.280|
000012  6800              LDR      r0,[r0,#0]  ; err_curr
000014  f7fffffe          BL       __aeabi_fsub
000018  4680              MOV      r8,r0
00001a  4621              MOV      r1,r4
00001c  f7fffffe          BL       __aeabi_fmul
000020  493e              LDR      r1,|L16.284|
000022  6008              STR      r0,[r1,#0]  ; cal_P
;;;238    	cal_I = i * err_curr;
000024  483c              LDR      r0,|L16.280|
000026  6801              LDR      r1,[r0,#0]  ; err_curr
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       __aeabi_fmul
00002e  493c              LDR      r1,|L16.288|
000030  6008              STR      r0,[r1,#0]  ; cal_I
;;;239    	cal_D = d * (err_curr + err_prev2 - 2*err_prev1);
000032  4838              LDR      r0,|L16.276|
000034  6801              LDR      r1,[r0,#0]  ; err_prev1
000036  f04f4080          MOV      r0,#0x40000000
00003a  f7fffffe          BL       __aeabi_fmul
00003e  4681              MOV      r9,r0
000040  4838              LDR      r0,|L16.292|
000042  6801              LDR      r1,[r0,#0]  ; err_prev2
000044  4834              LDR      r0,|L16.280|
000046  6800              LDR      r0,[r0,#0]  ; err_curr
000048  f7fffffe          BL       __aeabi_fadd
00004c  4682              MOV      r10,r0
00004e  4649              MOV      r1,r9
000050  f7fffffe          BL       __aeabi_fsub
000054  4680              MOV      r8,r0
000056  4631              MOV      r1,r6
000058  f7fffffe          BL       __aeabi_fmul
00005c  4932              LDR      r1,|L16.296|
00005e  6008              STR      r0,[r1,#0]  ; cal_D
;;;240    
;;;241    	err_prev2 = err_prev1;
000060  482c              LDR      r0,|L16.276|
000062  6800              LDR      r0,[r0,#0]  ; err_prev1
000064  492f              LDR      r1,|L16.292|
000066  6008              STR      r0,[r1,#0]  ; err_prev2
;;;242    	err_prev1 = err_curr;
000068  482b              LDR      r0,|L16.280|
00006a  6800              LDR      r0,[r0,#0]  ; err_curr
00006c  4929              LDR      r1,|L16.276|
00006e  6008              STR      r0,[r1,#0]  ; err_prev1
;;;243    		
;;;244    	PID = cal_P + cal_I + cal_D;
000070  482b              LDR      r0,|L16.288|
000072  6801              LDR      r1,[r0,#0]  ; cal_I
000074  4829              LDR      r0,|L16.284|
000076  6800              LDR      r0,[r0,#0]  ; cal_P
000078  f7fffffe          BL       __aeabi_fadd
00007c  4680              MOV      r8,r0
00007e  482a              LDR      r0,|L16.296|
000080  6801              LDR      r1,[r0,#0]  ; cal_D
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       __aeabi_fadd
000088  4928              LDR      r1,|L16.300|
00008a  6008              STR      r0,[r1,#0]  ; PID
;;;245    
;;;246    	if (mode==0)
00008c  b9d7              CBNZ     r7,|L16.196|
;;;247    	{
;;;248    		current_input += PID;
00008e  4608              MOV      r0,r1
000090  6801              LDR      r1,[r0,#0]  ; PID
000092  4827              LDR      r0,|L16.304|
000094  6800              LDR      r0,[r0,#0]  ; current_input
000096  f7fffffe          BL       __aeabi_fadd
00009a  4925              LDR      r1,|L16.304|
00009c  6008              STR      r0,[r1,#0]  ; current_input
;;;249    	
;;;250    		if(current_input > MAX_CURRENT)	   current_input = MAX_CURRENT;
00009e  4925              LDR      r1,|L16.308|
0000a0  4823              LDR      r0,|L16.304|
0000a2  6800              LDR      r0,[r0,#0]  ; current_input
0000a4  f7fffffe          BL       __aeabi_cfrcmple
0000a8  d202              BCS      |L16.176|
0000aa  4822              LDR      r0,|L16.308|
0000ac  4920              LDR      r1,|L16.304|
0000ae  6008              STR      r0,[r1,#0]  ; current_input
                  |L16.176|
;;;251    		if(current_input < -MAX_CURRENT)   current_input = -MAX_CURRENT;
0000b0  4921              LDR      r1,|L16.312|
0000b2  481f              LDR      r0,|L16.304|
0000b4  6800              LDR      r0,[r0,#0]  ; current_input
0000b6  f7fffffe          BL       __aeabi_cfcmple
0000ba  d228              BCS      |L16.270|
0000bc  481e              LDR      r0,|L16.312|
0000be  491c              LDR      r1,|L16.304|
0000c0  6008              STR      r0,[r1,#0]  ; current_input
0000c2  e024              B        |L16.270|
                  |L16.196|
;;;252    	}
;;;253    	else
;;;254    	{
;;;255    		pwm = pwm + PID;
0000c4  4819              LDR      r0,|L16.300|
0000c6  6801              LDR      r1,[r0,#0]  ; PID
0000c8  481c              LDR      r0,|L16.316|
0000ca  6800              LDR      r0,[r0,#0]  ; pwm
0000cc  f7fffffe          BL       __aeabi_fadd
0000d0  491a              LDR      r1,|L16.316|
0000d2  6008              STR      r0,[r1,#0]  ; pwm
;;;256    
;;;257    		dir = (pwm>0)?1:0;					  
0000d4  2100              MOVS     r1,#0
0000d6  4819              LDR      r0,|L16.316|
0000d8  6800              LDR      r0,[r0,#0]  ; pwm
0000da  f7fffffe          BL       __aeabi_cfrcmple
0000de  d201              BCS      |L16.228|
0000e0  2001              MOVS     r0,#1
0000e2  e000              B        |L16.230|
                  |L16.228|
0000e4  2000              MOVS     r0,#0
                  |L16.230|
0000e6  4916              LDR      r1,|L16.320|
0000e8  7008              STRB     r0,[r1,#0]
;;;258    
;;;259    		if(pwm > MAX_PWM)	pwm = MAX_PWM;
0000ea  4916              LDR      r1,|L16.324|
0000ec  4813              LDR      r0,|L16.316|
0000ee  6800              LDR      r0,[r0,#0]  ; pwm
0000f0  f7fffffe          BL       __aeabi_cfrcmple
0000f4  d202              BCS      |L16.252|
0000f6  4813              LDR      r0,|L16.324|
0000f8  4910              LDR      r1,|L16.316|
0000fa  6008              STR      r0,[r1,#0]  ; pwm
                  |L16.252|
;;;260    		if(pwm < -MAX_PWM)   pwm = -MAX_PWM;
0000fc  4912              LDR      r1,|L16.328|
0000fe  480f              LDR      r0,|L16.316|
000100  6800              LDR      r0,[r0,#0]  ; pwm
000102  f7fffffe          BL       __aeabi_cfcmple
000106  d202              BCS      |L16.270|
000108  480f              LDR      r0,|L16.328|
00010a  490c              LDR      r1,|L16.316|
00010c  6008              STR      r0,[r1,#0]  ; pwm
                  |L16.270|
;;;261    	}
;;;262    }
00010e  e8bd87f0          POP      {r4-r10,pc}
;;;263    
                          ENDP

000112  0000              DCW      0x0000
                  |L16.276|
                          DCD      err_prev1
                  |L16.280|
                          DCD      err_curr
                  |L16.284|
                          DCD      cal_P
                  |L16.288|
                          DCD      cal_I
                  |L16.292|
                          DCD      err_prev2
                  |L16.296|
                          DCD      cal_D
                  |L16.300|
                          DCD      PID
                  |L16.304|
                          DCD      current_input
                  |L16.308|
                          DCD      0x44898000
                  |L16.312|
                          DCD      0xc4898000
                  |L16.316|
                          DCD      pwm
                  |L16.320|
                          DCD      ||dir||
                  |L16.324|
                          DCD      0x44e0e000
                  |L16.328|
                          DCD      0xc4e0e000

                          AREA ||i.vel_err||, CODE, READONLY, ALIGN=2

                  vel_err PROC
;;;190    
;;;191    void vel_err(void)
000000  b570              PUSH     {r4-r6,lr}
;;;192    {
;;;193    	if (user_speed-r_count>increment)
000002  4849              LDR      r0,|L17.296|
000004  6801              LDR      r1,[r0,#0]  ; r_count
000006  4849              LDR      r0,|L17.300|
000008  6800              LDR      r0,[r0,#0]  ; user_speed
00000a  f7fffffe          BL       __aeabi_fsub
00000e  4604              MOV      r4,r0
000010  4847              LDR      r0,|L17.304|
000012  6801              LDR      r1,[r0,#0]  ; increment
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       __aeabi_cfrcmple
00001a  d208              BCS      |L17.46|
;;;194    		r_count+=increment;
00001c  4844              LDR      r0,|L17.304|
00001e  6801              LDR      r1,[r0,#0]  ; increment
000020  4841              LDR      r0,|L17.296|
000022  6800              LDR      r0,[r0,#0]  ; r_count
000024  f7fffffe          BL       __aeabi_fadd
000028  493f              LDR      r1,|L17.296|
00002a  6008              STR      r0,[r1,#0]  ; r_count
00002c  e01b              B        |L17.102|
                  |L17.46|
;;;195    	else if (user_speed-r_count<-increment)
00002e  4840              LDR      r0,|L17.304|
000030  6800              LDR      r0,[r0,#0]  ; increment
000032  f0804400          EOR      r4,r0,#0x80000000
000036  483c              LDR      r0,|L17.296|
000038  6801              LDR      r1,[r0,#0]  ; r_count
00003a  483c              LDR      r0,|L17.300|
00003c  6800              LDR      r0,[r0,#0]  ; user_speed
00003e  f7fffffe          BL       __aeabi_fsub
000042  4605              MOV      r5,r0
000044  4621              MOV      r1,r4
000046  f7fffffe          BL       __aeabi_cfcmple
00004a  d208              BCS      |L17.94|
;;;196    		r_count-=increment;
00004c  4838              LDR      r0,|L17.304|
00004e  6801              LDR      r1,[r0,#0]  ; increment
000050  4835              LDR      r0,|L17.296|
000052  6800              LDR      r0,[r0,#0]  ; r_count
000054  f7fffffe          BL       __aeabi_fsub
000058  4933              LDR      r1,|L17.296|
00005a  6008              STR      r0,[r1,#0]  ; r_count
00005c  e003              B        |L17.102|
                  |L17.94|
;;;197    	else r_count=user_speed;
00005e  4833              LDR      r0,|L17.300|
000060  6800              LDR      r0,[r0,#0]  ; user_speed
000062  4931              LDR      r1,|L17.296|
000064  6008              STR      r0,[r1,#0]  ; r_count
                  |L17.102|
;;;198    
;;;199        err_curr = r_count - d_count;		
000066  4833              LDR      r0,|L17.308|
000068  6801              LDR      r1,[r0,#0]  ; d_count
00006a  482f              LDR      r0,|L17.296|
00006c  6800              LDR      r0,[r0,#0]  ; r_count
00006e  f7fffffe          BL       __aeabi_fsub
000072  4931              LDR      r1,|L17.312|
000074  6008              STR      r0,[r1,#0]  ; err_curr
;;;200    
;;;201    if(cali_done){
000076  4831              LDR      r0,|L17.316|
000078  7800              LDRB     r0,[r0,#0]  ; cali_done
00007a  2800              CMP      r0,#0
00007c  d052              BEQ      |L17.292|
;;;202    	if(r_count < 30 && r_count > -30){
00007e  4930              LDR      r1,|L17.320|
000080  4829              LDR      r0,|L17.296|
000082  6800              LDR      r0,[r0,#0]  ; r_count
000084  f7fffffe          BL       __aeabi_cfcmple
000088  d228              BCS      |L17.220|
00008a  492e              LDR      r1,|L17.324|
00008c  4826              LDR      r0,|L17.296|
00008e  6800              LDR      r0,[r0,#0]  ; r_count
000090  f7fffffe          BL       __aeabi_cfrcmple
000094  d222              BCS      |L17.220|
;;;203        kp1 = 15;
000096  482c              LDR      r0,|L17.328|
000098  492c              LDR      r1,|L17.332|
00009a  6008              STR      r0,[r1,#0]  ; kp1
;;;204        kp2 = 15;
00009c  492c              LDR      r1,|L17.336|
00009e  6008              STR      r0,[r1,#0]  ; kp2
;;;205        ki1 = 0.45;
0000a0  482c              LDR      r0,|L17.340|
0000a2  492d              LDR      r1,|L17.344|
0000a4  6008              STR      r0,[r1,#0]  ; ki1
;;;206    		ki2 = 0.45;
0000a6  492d              LDR      r1,|L17.348|
0000a8  6008              STR      r0,[r1,#0]  ; ki2
;;;207    		kd1 = 30;
0000aa  4825              LDR      r0,|L17.320|
0000ac  492c              LDR      r1,|L17.352|
0000ae  6008              STR      r0,[r1,#0]  ; kd1
;;;208    		kd2 = 30;
0000b0  492c              LDR      r1,|L17.356|
0000b2  6008              STR      r0,[r1,#0]  ; kd2
;;;209    		ip = 2.1;
0000b4  482c              LDR      r0,|L17.360|
0000b6  492d              LDR      r1,|L17.364|
0000b8  6008              STR      r0,[r1,#0]  ; ip
;;;210    		ii = 0.14;
0000ba  482d              LDR      r0,|L17.368|
0000bc  492d              LDR      r1,|L17.372|
0000be  6008              STR      r0,[r1,#0]  ; ii
;;;211    		id = 0;
0000c0  2000              MOVS     r0,#0
0000c2  492d              LDR      r1,|L17.376|
0000c4  6008              STR      r0,[r1,#0]  ; id
;;;212    			GPIO_WriteBit(GPIOC,GPIO_Pin_0,1);
0000c6  2201              MOVS     r2,#1
0000c8  4611              MOV      r1,r2
0000ca  482c              LDR      r0,|L17.380|
0000cc  f7fffffe          BL       GPIO_WriteBit
;;;213    			GPIO_WriteBit(GPIOC,GPIO_Pin_1,0);
0000d0  2200              MOVS     r2,#0
0000d2  2102              MOVS     r1,#2
0000d4  4829              LDR      r0,|L17.380|
0000d6  f7fffffe          BL       GPIO_WriteBit
0000da  e023              B        |L17.292|
                  |L17.220|
;;;214    	}else{
;;;215    		kp1 = 8;
0000dc  f04f4082          MOV      r0,#0x41000000
0000e0  491a              LDR      r1,|L17.332|
0000e2  6008              STR      r0,[r1,#0]  ; kp1
;;;216        kp2 = 8;
0000e4  491a              LDR      r1,|L17.336|
0000e6  6008              STR      r0,[r1,#0]  ; kp2
;;;217        ki1 = 0.08;
0000e8  4825              LDR      r0,|L17.384|
0000ea  491b              LDR      r1,|L17.344|
0000ec  6008              STR      r0,[r1,#0]  ; ki1
;;;218    		ki2 = 0.08;
0000ee  491b              LDR      r1,|L17.348|
0000f0  6008              STR      r0,[r1,#0]  ; ki2
;;;219    		kd1 = 32;
0000f2  f04f4084          MOV      r0,#0x42000000
0000f6  491a              LDR      r1,|L17.352|
0000f8  6008              STR      r0,[r1,#0]  ; kd1
;;;220    		kd2 = 32;
0000fa  491a              LDR      r1,|L17.356|
0000fc  6008              STR      r0,[r1,#0]  ; kd2
;;;221    		ip = 3;
0000fe  4821              LDR      r0,|L17.388|
000100  491a              LDR      r1,|L17.364|
000102  6008              STR      r0,[r1,#0]  ; ip
;;;222    		ii = 0.2;
000104  4820              LDR      r0,|L17.392|
000106  491b              LDR      r1,|L17.372|
000108  6008              STR      r0,[r1,#0]  ; ii
;;;223    		id = 0;
00010a  2000              MOVS     r0,#0
00010c  491a              LDR      r1,|L17.376|
00010e  6008              STR      r0,[r1,#0]  ; id
;;;224    		GPIO_WriteBit(GPIOC,GPIO_Pin_1,1);
000110  2201              MOVS     r2,#1
000112  2102              MOVS     r1,#2
000114  4819              LDR      r0,|L17.380|
000116  f7fffffe          BL       GPIO_WriteBit
;;;225    		GPIO_WriteBit(GPIOC,GPIO_Pin_0,0);
00011a  2200              MOVS     r2,#0
00011c  2101              MOVS     r1,#1
00011e  4817              LDR      r0,|L17.380|
000120  f7fffffe          BL       GPIO_WriteBit
                  |L17.292|
;;;226    	}	
;;;227    }	
;;;228    }
000124  bd70              POP      {r4-r6,pc}
;;;229    
                          ENDP

000126  0000              DCW      0x0000
                  |L17.296|
                          DCD      r_count
                  |L17.300|
                          DCD      user_speed
                  |L17.304|
                          DCD      increment
                  |L17.308|
                          DCD      d_count
                  |L17.312|
                          DCD      err_curr
                  |L17.316|
                          DCD      cali_done
                  |L17.320|
                          DCD      0x41f00000
                  |L17.324|
                          DCD      0xc1f00000
                  |L17.328|
                          DCD      0x41700000
                  |L17.332|
                          DCD      kp1
                  |L17.336|
                          DCD      kp2
                  |L17.340|
                          DCD      0x3ee66666
                  |L17.344|
                          DCD      ki1
                  |L17.348|
                          DCD      ki2
                  |L17.352|
                          DCD      kd1
                  |L17.356|
                          DCD      kd2
                  |L17.360|
                          DCD      0x40066666
                  |L17.364|
                          DCD      ||ip||
                  |L17.368|
                          DCD      0x3e0f5c29
                  |L17.372|
                          DCD      ||ii||
                  |L17.376|
                          DCD      ||id||
                  |L17.380|
                          DCD      0x40011000
                  |L17.384|
                          DCD      0x3da3d70a
                  |L17.388|
                          DCD      0x40400000
                  |L17.392|
                          DCD      0x3e4ccccd

                          AREA ||i.vel_get_speed||, CODE, READONLY, ALIGN=2

                  vel_get_speed PROC
;;;113    // command only	for debug
;;;114    float vel_get_speed(void)
000000  4801              LDR      r0,|L18.8|
;;;115    {
;;;116    	return d_count; 
000002  6800              LDR      r0,[r0,#0]  ; d_count
;;;117    }
000004  4770              BX       lr
;;;118    
                          ENDP

000006  0000              DCW      0x0000
                  |L18.8|
                          DCD      d_count

                          AREA ||i.vel_init_pwm||, CODE, READONLY, ALIGN=2

                  vel_init_pwm PROC
;;;94     // command only	for debug
;;;95     void vel_init_pwm(float _pwm, s8 _dir)
000000  4a02              LDR      r2,|L19.12|
;;;96     {
;;;97      	pwm = _pwm;
000002  6010              STR      r0,[r2,#0]  ; pwm
;;;98     	dir = _dir;
000004  4a02              LDR      r2,|L19.16|
000006  7011              STRB     r1,[r2,#0]
;;;99     }
000008  4770              BX       lr
;;;100    
                          ENDP

00000a  0000              DCW      0x0000
                  |L19.12|
                          DCD      pwm
                  |L19.16|
                          DCD      ||dir||

                          AREA ||i.vel_move||, CODE, READONLY, ALIGN=2

                  vel_move PROC
;;;356    
;;;357    void vel_move(u8 mode)
000000  b510              PUSH     {r4,lr}
;;;358    {
000002  4604              MOV      r4,r0
;;;359    	vel_err();
000004  f7fffffe          BL       vel_err
;;;360    
;;;361    	if (mode==0)
000008  b98c              CBNZ     r4,|L20.46|
;;;362    	{
;;;363    
;;;364    	 	vel_calculate_pwm(kp1,ki1,kd1,0);
00000a  2300              MOVS     r3,#0
00000c  480d              LDR      r0,|L20.68|
00000e  6802              LDR      r2,[r0,#0]  ; kd1
000010  480d              LDR      r0,|L20.72|
000012  6801              LDR      r1,[r0,#0]  ; ki1
000014  480d              LDR      r0,|L20.76|
000016  6800              LDR      r0,[r0,#0]  ; kp1
000018  f7fffffe          BL       vel_calculate_pwm
;;;365    	
;;;366    	//	current_input=r_count;
;;;367    	
;;;368    		current_circle(ip,ii,id);
00001c  480c              LDR      r0,|L20.80|
00001e  6802              LDR      r2,[r0,#0]  ; id
000020  480c              LDR      r0,|L20.84|
000022  6801              LDR      r1,[r0,#0]  ; ii
000024  480c              LDR      r0,|L20.88|
000026  6800              LDR      r0,[r0,#0]  ; ip
000028  f7fffffe          BL       current_circle
00002c  e008              B        |L20.64|
                  |L20.46|
;;;369    	}
;;;370    	else
;;;371    	{
;;;372    		vel_calculate_pwm(kp11,ki11,kd11,1);
00002e  2301              MOVS     r3,#1
000030  480a              LDR      r0,|L20.92|
000032  6802              LDR      r2,[r0,#0]  ; kd11
000034  480a              LDR      r0,|L20.96|
000036  6801              LDR      r1,[r0,#0]  ; ki11
000038  480a              LDR      r0,|L20.100|
00003a  6800              LDR      r0,[r0,#0]  ; kp11
00003c  f7fffffe          BL       vel_calculate_pwm
                  |L20.64|
;;;373    	}
;;;374    
;;;375    }
000040  bd10              POP      {r4,pc}
;;;376    
                          ENDP

000042  0000              DCW      0x0000
                  |L20.68|
                          DCD      kd1
                  |L20.72|
                          DCD      ki1
                  |L20.76|
                          DCD      kp1
                  |L20.80|
                          DCD      ||id||
                  |L20.84|
                          DCD      ||ii||
                  |L20.88|
                          DCD      ||ip||
                  |L20.92|
                          DCD      kd11
                  |L20.96|
                          DCD      ki11
                  |L20.100|
                          DCD      kp11

                          AREA ||i.vel_n_pos||, CODE, READONLY, ALIGN=2

                  vel_n_pos PROC
;;;464    // main function
;;;465    void vel_n_pos(void)
000000  b510              PUSH     {r4,lr}
;;;466    {
;;;467    
;;;468        read_encoder();
000002  f7fffffe          BL       read_encoder
;;;469    	get_current();
000006  f7fffffe          BL       get_current
;;;470    	if (cali_done)
00000a  4832              LDR      r0,|L21.212|
00000c  7800              LDRB     r0,[r0,#0]  ; cali_done
00000e  b360              CBZ      r0,|L21.106|
;;;471    	{
;;;472    		if (enable_bar==0)  
000010  4831              LDR      r0,|L21.216|
000012  7800              LDRB     r0,[r0,#0]  ; enable_bar
000014  b910              CBNZ     r0,|L21.28|
;;;473    			vel_zero();
000016  f7fffffe          BL       vel_zero
00001a  e058              B        |L21.206|
                  |L21.28|
;;;474    	
;;;475    		else if(enable_bar==2)
00001c  482e              LDR      r0,|L21.216|
00001e  7800              LDRB     r0,[r0,#0]  ; enable_bar
000020  2802              CMP      r0,#2
000022  d103              BNE      |L21.44|
;;;476    			vel_stop(0);
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       vel_stop
00002a  e050              B        |L21.206|
                  |L21.44|
;;;477    		
;;;478    		else if(enable_bar==1) 
00002c  482a              LDR      r0,|L21.216|
00002e  7800              LDRB     r0,[r0,#0]  ; enable_bar
000030  2801              CMP      r0,#1
000032  d103              BNE      |L21.60|
;;;479    			vel_move(0);
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       vel_move
00003a  e048              B        |L21.206|
                  |L21.60|
;;;480    		
;;;481    		else if(enable_bar==3)
00003c  4826              LDR      r0,|L21.216|
00003e  7800              LDRB     r0,[r0,#0]  ; enable_bar
000040  2803              CMP      r0,#3
000042  d103              BNE      |L21.76|
;;;482    			pos_move(0);
000044  2000              MOVS     r0,#0
000046  f7fffffe          BL       pos_move
00004a  e040              B        |L21.206|
                  |L21.76|
;;;483    	
;;;484    		else if(enable_bar==4)
00004c  4822              LDR      r0,|L21.216|
00004e  7800              LDRB     r0,[r0,#0]  ; enable_bar
000050  2804              CMP      r0,#4
000052  d103              BNE      |L21.92|
;;;485    			vel_pwm_current(0);
000054  2000              MOVS     r0,#0
000056  f7fffffe          BL       vel_pwm_current
00005a  e038              B        |L21.206|
                  |L21.92|
;;;486    
;;;487    		else if(enable_bar==5) 
00005c  481e              LDR      r0,|L21.216|
00005e  7800              LDRB     r0,[r0,#0]  ; enable_bar
000060  2805              CMP      r0,#5
000062  d134              BNE      |L21.206|
;;;488    			vel_pwm();
000064  f7fffffe          BL       vel_pwm
000068  e031              B        |L21.206|
                  |L21.106|
;;;489    		
;;;490    	}
;;;491    	else 
;;;492    	{
;;;493    		if(enable_bar==6) 
00006a  481b              LDR      r0,|L21.216|
00006c  7800              LDRB     r0,[r0,#0]  ; enable_bar
00006e  2806              CMP      r0,#6
000070  d102              BNE      |L21.120|
;;;494    			ADC_calibration();
000072  f7fffffe          BL       ADC_calibration
000076  e02a              B        |L21.206|
                  |L21.120|
;;;495    
;;;496    		else if (enable_bar==0)  
000078  4817              LDR      r0,|L21.216|
00007a  7800              LDRB     r0,[r0,#0]  ; enable_bar
00007c  b910              CBNZ     r0,|L21.132|
;;;497    			vel_zero();
00007e  f7fffffe          BL       vel_zero
000082  e024              B        |L21.206|
                  |L21.132|
;;;498    	
;;;499    		else if(enable_bar==2)
000084  4814              LDR      r0,|L21.216|
000086  7800              LDRB     r0,[r0,#0]  ; enable_bar
000088  2802              CMP      r0,#2
00008a  d103              BNE      |L21.148|
;;;500    			vel_stop(1);
00008c  2001              MOVS     r0,#1
00008e  f7fffffe          BL       vel_stop
000092  e01c              B        |L21.206|
                  |L21.148|
;;;501    		
;;;502    		else if(enable_bar==1) 
000094  4810              LDR      r0,|L21.216|
000096  7800              LDRB     r0,[r0,#0]  ; enable_bar
000098  2801              CMP      r0,#1
00009a  d102              BNE      |L21.162|
;;;503    			vel_move(1);
00009c  f7fffffe          BL       vel_move
0000a0  e015              B        |L21.206|
                  |L21.162|
;;;504    		
;;;505    		else if(enable_bar==3)
0000a2  480d              LDR      r0,|L21.216|
0000a4  7800              LDRB     r0,[r0,#0]  ; enable_bar
0000a6  2803              CMP      r0,#3
0000a8  d103              BNE      |L21.178|
;;;506    			pos_move(1);
0000aa  2001              MOVS     r0,#1
0000ac  f7fffffe          BL       pos_move
0000b0  e00d              B        |L21.206|
                  |L21.178|
;;;507    	
;;;508    		else if(enable_bar==4)
0000b2  4809              LDR      r0,|L21.216|
0000b4  7800              LDRB     r0,[r0,#0]  ; enable_bar
0000b6  2804              CMP      r0,#4
0000b8  d103              BNE      |L21.194|
;;;509    			vel_pwm_current(1);
0000ba  2001              MOVS     r0,#1
0000bc  f7fffffe          BL       vel_pwm_current
0000c0  e005              B        |L21.206|
                  |L21.194|
;;;510    
;;;511    		else if(enable_bar==5) 
0000c2  4805              LDR      r0,|L21.216|
0000c4  7800              LDRB     r0,[r0,#0]  ; enable_bar
0000c6  2805              CMP      r0,#5
0000c8  d101              BNE      |L21.206|
;;;512    			vel_pwm();
0000ca  f7fffffe          BL       vel_pwm
                  |L21.206|
;;;513    	}
;;;514    	set_pwm_to_motor();	   
0000ce  f7fffffe          BL       set_pwm_to_motor
;;;515    }
0000d2  bd10              POP      {r4,pc}
;;;516    
                          ENDP

                  |L21.212|
                          DCD      cali_done
                  |L21.216|
                          DCD      enable_bar

                          AREA ||i.vel_pwm||, CODE, READONLY, ALIGN=2

                  vel_pwm PROC
;;;404    //sub function
;;;405    void vel_pwm(void)
000000  4804              LDR      r0,|L22.20|
;;;406    {
;;;407    	pwm=set_pwm;
000002  6800              LDR      r0,[r0,#0]  ; set_pwm
000004  4904              LDR      r1,|L22.24|
000006  6008              STR      r0,[r1,#0]  ; pwm
;;;408    	dir=set_dir;
000008  4804              LDR      r0,|L22.28|
00000a  f9900000          LDRSB    r0,[r0,#0]  ; set_dir
00000e  4904              LDR      r1,|L22.32|
000010  7008              STRB     r0,[r1,#0]
;;;409    
;;;410    }
000012  4770              BX       lr
;;;411    
                          ENDP

                  |L22.20|
                          DCD      set_pwm
                  |L22.24|
                          DCD      pwm
                  |L22.28|
                          DCD      set_dir
                  |L22.32|
                          DCD      ||dir||

                          AREA ||i.vel_pwm_current||, CODE, READONLY, ALIGN=2

                  vel_pwm_current PROC
;;;416    float r_cur=0;
;;;417    void vel_pwm_current(u8 mode)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;418    {
000004  4604              MOV      r4,r0
;;;419    	if (mode==0)
000006  2c00              CMP      r4,#0
000008  d177              BNE      |L23.250|
;;;420    	{
;;;421    		if (pwm_current==0)
00000a  2100              MOVS     r1,#0
00000c  4861              LDR      r0,|L23.404|
00000e  6800              LDR      r0,[r0,#0]  ; pwm_current
000010  f7fffffe          BL       __aeabi_cfcmpeq
000014  d103              BNE      |L23.30|
;;;422    			pwm=0;
000016  2000              MOVS     r0,#0
000018  495f              LDR      r1,|L23.408|
00001a  6008              STR      r0,[r1,#0]  ; pwm
00001c  e0b7              B        |L23.398|
                  |L23.30|
;;;423    		else
;;;424    		{
;;;425    			if (pwm_current>0)
00001e  2100              MOVS     r1,#0
000020  485c              LDR      r0,|L23.404|
000022  6800              LDR      r0,[r0,#0]  ; pwm_current
000024  f7fffffe          BL       __aeabi_cfrcmple
000028  d204              BCS      |L23.52|
;;;426    				r_cur=max_current;
00002a  485c              LDR      r0,|L23.412|
00002c  6800              LDR      r0,[r0,#0]  ; max_current
00002e  495c              LDR      r1,|L23.416|
000030  6008              STR      r0,[r1,#0]  ; r_cur
000032  e005              B        |L23.64|
                  |L23.52|
;;;427    			else
;;;428    				r_cur=-max_current;
000034  4859              LDR      r0,|L23.412|
000036  6800              LDR      r0,[r0,#0]  ; max_current
000038  f0804000          EOR      r0,r0,#0x80000000
00003c  4958              LDR      r1,|L23.416|
00003e  6008              STR      r0,[r1,#0]  ; r_cur
                  |L23.64|
;;;429    	
;;;430    		    I_err_curr=r_cur-motor_current;
000040  4858              LDR      r0,|L23.420|
000042  6801              LDR      r1,[r0,#0]  ; motor_current
000044  4856              LDR      r0,|L23.416|
000046  6800              LDR      r0,[r0,#0]  ; r_cur
000048  f7fffffe          BL       __aeabi_fsub
00004c  4956              LDR      r1,|L23.424|
00004e  6008              STR      r0,[r1,#0]  ; I_err_curr
;;;431    		
;;;432    		    I_cal_P = ip * (I_err_curr - I_err_prev1);
000050  4856              LDR      r0,|L23.428|
000052  6801              LDR      r1,[r0,#0]  ; I_err_prev1
000054  4854              LDR      r0,|L23.424|
000056  6800              LDR      r0,[r0,#0]  ; I_err_curr
000058  f7fffffe          BL       __aeabi_fsub
00005c  4605              MOV      r5,r0
00005e  4854              LDR      r0,|L23.432|
000060  6801              LDR      r1,[r0,#0]  ; ip
000062  4628              MOV      r0,r5
000064  f7fffffe          BL       __aeabi_fmul
000068  4952              LDR      r1,|L23.436|
00006a  6008              STR      r0,[r1,#0]  ; I_cal_P
;;;433    			I_cal_I = ii * I_err_curr;
00006c  484e              LDR      r0,|L23.424|
00006e  6801              LDR      r1,[r0,#0]  ; I_err_curr
000070  4851              LDR      r0,|L23.440|
000072  6800              LDR      r0,[r0,#0]  ; ii
000074  f7fffffe          BL       __aeabi_fmul
000078  4950              LDR      r1,|L23.444|
00007a  6008              STR      r0,[r1,#0]  ; I_cal_I
;;;434    			I_cal_D = id * (I_err_curr + I_err_prev2 - 2*I_err_prev1);
00007c  484b              LDR      r0,|L23.428|
00007e  6801              LDR      r1,[r0,#0]  ; I_err_prev1
000080  f04f4080          MOV      r0,#0x40000000
000084  f7fffffe          BL       __aeabi_fmul
000088  4606              MOV      r6,r0
00008a  484d              LDR      r0,|L23.448|
00008c  6801              LDR      r1,[r0,#0]  ; I_err_prev2
00008e  4846              LDR      r0,|L23.424|
000090  6800              LDR      r0,[r0,#0]  ; I_err_curr
000092  f7fffffe          BL       __aeabi_fadd
000096  4607              MOV      r7,r0
000098  4631              MOV      r1,r6
00009a  f7fffffe          BL       __aeabi_fsub
00009e  4605              MOV      r5,r0
0000a0  4848              LDR      r0,|L23.452|
0000a2  6801              LDR      r1,[r0,#0]  ; id
0000a4  4628              MOV      r0,r5
0000a6  f7fffffe          BL       __aeabi_fmul
0000aa  4947              LDR      r1,|L23.456|
0000ac  6008              STR      r0,[r1,#0]  ; I_cal_D
;;;435    		
;;;436    			I_err_prev2 = I_err_prev1;
0000ae  483f              LDR      r0,|L23.428|
0000b0  6800              LDR      r0,[r0,#0]  ; I_err_prev1
0000b2  4943              LDR      r1,|L23.448|
0000b4  6008              STR      r0,[r1,#0]  ; I_err_prev2
;;;437    			I_err_prev1 = I_err_curr;
0000b6  483c              LDR      r0,|L23.424|
0000b8  6800              LDR      r0,[r0,#0]  ; I_err_curr
0000ba  493c              LDR      r1,|L23.428|
0000bc  6008              STR      r0,[r1,#0]  ; I_err_prev1
;;;438    				
;;;439    			I_PID = I_cal_P + I_cal_I + I_cal_D;
0000be  483f              LDR      r0,|L23.444|
0000c0  6801              LDR      r1,[r0,#0]  ; I_cal_I
0000c2  483c              LDR      r0,|L23.436|
0000c4  6800              LDR      r0,[r0,#0]  ; I_cal_P
0000c6  f7fffffe          BL       __aeabi_fadd
0000ca  4605              MOV      r5,r0
0000cc  483e              LDR      r0,|L23.456|
0000ce  6801              LDR      r1,[r0,#0]  ; I_cal_D
0000d0  4628              MOV      r0,r5
0000d2  f7fffffe          BL       __aeabi_fadd
0000d6  493d              LDR      r1,|L23.460|
0000d8  6008              STR      r0,[r1,#0]  ; I_PID
;;;440    		
;;;441    			pwm = pwm + I_PID;
0000da  4608              MOV      r0,r1
0000dc  6801              LDR      r1,[r0,#0]  ; I_PID
0000de  482e              LDR      r0,|L23.408|
0000e0  6800              LDR      r0,[r0,#0]  ; pwm
0000e2  f7fffffe          BL       __aeabi_fadd
0000e6  492c              LDR      r1,|L23.408|
0000e8  6008              STR      r0,[r1,#0]  ; pwm
;;;442    		
;;;443    			dir = (pwm>0)?1:0;
0000ea  2100              MOVS     r1,#0
0000ec  482a              LDR      r0,|L23.408|
0000ee  6800              LDR      r0,[r0,#0]  ; pwm
0000f0  f7fffffe          BL       __aeabi_cfrcmple
0000f4  d202              BCS      |L23.252|
0000f6  2001              MOVS     r0,#1
0000f8  e001              B        |L23.254|
                  |L23.250|
0000fa  e044              B        |L23.390|
                  |L23.252|
0000fc  2000              MOVS     r0,#0
                  |L23.254|
0000fe  4934              LDR      r1,|L23.464|
000100  7008              STRB     r0,[r1,#0]
;;;444    			if (pwm_current>0)
000102  2100              MOVS     r1,#0
000104  4823              LDR      r0,|L23.404|
000106  6800              LDR      r0,[r0,#0]  ; pwm_current
000108  f7fffffe          BL       __aeabi_cfrcmple
00010c  d21d              BCS      |L23.330|
;;;445    			{
;;;446    				if(pwm >pwm_current)	pwm = pwm_current;
00010e  4821              LDR      r0,|L23.404|
000110  6801              LDR      r1,[r0,#0]  ; pwm_current
000112  4821              LDR      r0,|L23.408|
000114  6800              LDR      r0,[r0,#0]  ; pwm
000116  f7fffffe          BL       __aeabi_cfrcmple
00011a  d203              BCS      |L23.292|
00011c  481d              LDR      r0,|L23.404|
00011e  6800              LDR      r0,[r0,#0]  ; pwm_current
000120  491d              LDR      r1,|L23.408|
000122  6008              STR      r0,[r1,#0]  ; pwm
                  |L23.292|
;;;447    				if(pwm > MAX_PWM)	pwm = MAX_PWM;
000124  492b              LDR      r1,|L23.468|
000126  481c              LDR      r0,|L23.408|
000128  6800              LDR      r0,[r0,#0]  ; pwm
00012a  f7fffffe          BL       __aeabi_cfrcmple
00012e  d202              BCS      |L23.310|
000130  4828              LDR      r0,|L23.468|
000132  4919              LDR      r1,|L23.408|
000134  6008              STR      r0,[r1,#0]  ; pwm
                  |L23.310|
;;;448    				if(pwm < -MAX_PWM)   pwm = -MAX_PWM;
000136  4928              LDR      r1,|L23.472|
000138  4817              LDR      r0,|L23.408|
00013a  6800              LDR      r0,[r0,#0]  ; pwm
00013c  f7fffffe          BL       __aeabi_cfcmple
000140  d225              BCS      |L23.398|
000142  4825              LDR      r0,|L23.472|
000144  4914              LDR      r1,|L23.408|
000146  6008              STR      r0,[r1,#0]  ; pwm
000148  e021              B        |L23.398|
                  |L23.330|
;;;449    			}
;;;450    			else 
;;;451    			{
;;;452    				if(pwm < pwm_current)   pwm = pwm_current;
00014a  4812              LDR      r0,|L23.404|
00014c  6801              LDR      r1,[r0,#0]  ; pwm_current
00014e  4812              LDR      r0,|L23.408|
000150  6800              LDR      r0,[r0,#0]  ; pwm
000152  f7fffffe          BL       __aeabi_cfcmple
000156  d203              BCS      |L23.352|
000158  480e              LDR      r0,|L23.404|
00015a  6800              LDR      r0,[r0,#0]  ; pwm_current
00015c  490e              LDR      r1,|L23.408|
00015e  6008              STR      r0,[r1,#0]  ; pwm
                  |L23.352|
;;;453    				if(pwm > MAX_PWM)	pwm = MAX_PWM;
000160  491c              LDR      r1,|L23.468|
000162  480d              LDR      r0,|L23.408|
000164  6800              LDR      r0,[r0,#0]  ; pwm
000166  f7fffffe          BL       __aeabi_cfrcmple
00016a  d202              BCS      |L23.370|
00016c  4819              LDR      r0,|L23.468|
00016e  490a              LDR      r1,|L23.408|
000170  6008              STR      r0,[r1,#0]  ; pwm
                  |L23.370|
;;;454    				if(pwm < -MAX_PWM)   pwm = -MAX_PWM;
000172  4919              LDR      r1,|L23.472|
000174  4808              LDR      r0,|L23.408|
000176  6800              LDR      r0,[r0,#0]  ; pwm
000178  f7fffffe          BL       __aeabi_cfcmple
00017c  d207              BCS      |L23.398|
00017e  4816              LDR      r0,|L23.472|
000180  4905              LDR      r1,|L23.408|
000182  6008              STR      r0,[r1,#0]  ; pwm
000184  e003              B        |L23.398|
                  |L23.390|
;;;455    			}
;;;456    		}
;;;457    	}
;;;458    	else
;;;459    	{
;;;460    		pwm=pwm_current;
000186  4803              LDR      r0,|L23.404|
000188  6800              LDR      r0,[r0,#0]  ; pwm_current
00018a  4903              LDR      r1,|L23.408|
00018c  6008              STR      r0,[r1,#0]  ; pwm
                  |L23.398|
;;;461    	}
;;;462    }
00018e  e8bd81f0          POP      {r4-r8,pc}
;;;463    
                          ENDP

000192  0000              DCW      0x0000
                  |L23.404|
                          DCD      pwm_current
                  |L23.408|
                          DCD      pwm
                  |L23.412|
                          DCD      max_current
                  |L23.416|
                          DCD      r_cur
                  |L23.420|
                          DCD      motor_current
                  |L23.424|
                          DCD      I_err_curr
                  |L23.428|
                          DCD      I_err_prev1
                  |L23.432|
                          DCD      ||ip||
                  |L23.436|
                          DCD      I_cal_P
                  |L23.440|
                          DCD      ||ii||
                  |L23.444|
                          DCD      I_cal_I
                  |L23.448|
                          DCD      I_err_prev2
                  |L23.452|
                          DCD      ||id||
                  |L23.456|
                          DCD      I_cal_D
                  |L23.460|
                          DCD      I_PID
                  |L23.464|
                          DCD      ||dir||
                  |L23.468|
                          DCD      0x44e0e000
                  |L23.472|
                          DCD      0xc4e0e000

                          AREA ||i.vel_set_max||, CODE, READONLY, ALIGN=2

                  vel_set_max PROC
;;;101    // command only	for debug
;;;102    void vel_set_max(float m)
000000  4901              LDR      r1,|L24.8|
;;;103    {
;;;104     	max_pwm = m;
000002  6008              STR      r0,[r1,#0]  ; max_pwm
;;;105    }
000004  4770              BX       lr
;;;106    
                          ENDP

000006  0000              DCW      0x0000
                  |L24.8|
                          DCD      max_pwm

                          AREA ||i.vel_set_pid1||, CODE, READONLY, ALIGN=2

                  vel_set_pid1 PROC
;;;78     // command only for debug
;;;79     void vel_set_pid1(float _p, float _i, float _d)
000000  4b03              LDR      r3,|L25.16|
;;;80     {
;;;81     	kp1 = _p;
000002  6018              STR      r0,[r3,#0]  ; kp1
;;;82     	ki1 = _i;
000004  4b03              LDR      r3,|L25.20|
000006  6019              STR      r1,[r3,#0]  ; ki1
;;;83     	kd1 = _d;	
000008  4b03              LDR      r3,|L25.24|
00000a  601a              STR      r2,[r3,#0]  ; kd1
;;;84     }	
00000c  4770              BX       lr
;;;85     
                          ENDP

00000e  0000              DCW      0x0000
                  |L25.16|
                          DCD      kp1
                  |L25.20|
                          DCD      ki1
                  |L25.24|
                          DCD      kd1

                          AREA ||i.vel_set_pid2||, CODE, READONLY, ALIGN=2

                  vel_set_pid2 PROC
;;;86     // command only	for debug
;;;87     void vel_set_pid2(float _p, float _i, float _d)
000000  4b03              LDR      r3,|L26.16|
;;;88     {
;;;89     	kp2 = _p;
000002  6018              STR      r0,[r3,#0]  ; kp2
;;;90     	ki2 = _i;
000004  4b03              LDR      r3,|L26.20|
000006  6019              STR      r1,[r3,#0]  ; ki2
;;;91     	kd2 = _d;	
000008  4b03              LDR      r3,|L26.24|
00000a  601a              STR      r2,[r3,#0]  ; kd2
;;;92     }	
00000c  4770              BX       lr
;;;93     
                          ENDP

00000e  0000              DCW      0x0000
                  |L26.16|
                          DCD      kp2
                  |L26.20|
                          DCD      ki2
                  |L26.24|
                          DCD      kd2

                          AREA ||i.vel_set_speed||, CODE, READONLY, ALIGN=2

                  vel_set_speed PROC
;;;107    // command only	for debug
;;;108    void vel_set_speed(float r)
000000  4901              LDR      r1,|L27.8|
;;;109    {
;;;110    	r_count = r;
000002  6008              STR      r0,[r1,#0]  ; r_count
;;;111    }
000004  4770              BX       lr
;;;112    
                          ENDP

000006  0000              DCW      0x0000
                  |L27.8|
                          DCD      r_count

                          AREA ||i.vel_stop||, CODE, READONLY, ALIGN=2

                  vel_stop PROC
;;;377    //sub function
;;;378    void vel_stop(u8 mode)
000000  b510              PUSH     {r4,lr}
;;;379    {  
000002  4604              MOV      r4,r0
;;;380    	r_count=0;
000004  2000              MOVS     r0,#0
000006  4910              LDR      r1,|L28.72|
000008  6008              STR      r0,[r1,#0]  ; r_count
;;;381    
;;;382    	vel_err();
00000a  f7fffffe          BL       vel_err
;;;383    
;;;384    	if (mode==0)
00000e  b98c              CBNZ     r4,|L28.52|
;;;385    	{
;;;386    		vel_calculate_pwm(kp2,ki2,kd2,0);
000010  2300              MOVS     r3,#0
000012  480e              LDR      r0,|L28.76|
000014  6802              LDR      r2,[r0,#0]  ; kd2
000016  480e              LDR      r0,|L28.80|
000018  6801              LDR      r1,[r0,#0]  ; ki2
00001a  480e              LDR      r0,|L28.84|
00001c  6800              LDR      r0,[r0,#0]  ; kp2
00001e  f7fffffe          BL       vel_calculate_pwm
;;;387    	
;;;388    		current_circle(ip,ii,id);
000022  480d              LDR      r0,|L28.88|
000024  6802              LDR      r2,[r0,#0]  ; id
000026  480d              LDR      r0,|L28.92|
000028  6801              LDR      r1,[r0,#0]  ; ii
00002a  480d              LDR      r0,|L28.96|
00002c  6800              LDR      r0,[r0,#0]  ; ip
00002e  f7fffffe          BL       current_circle
000032  e008              B        |L28.70|
                  |L28.52|
;;;389    	}
;;;390    	else
;;;391    	{
;;;392    		vel_calculate_pwm(kp21,ki21,kd21,1);
000034  2301              MOVS     r3,#1
000036  480b              LDR      r0,|L28.100|
000038  6802              LDR      r2,[r0,#0]  ; kd21
00003a  480b              LDR      r0,|L28.104|
00003c  6801              LDR      r1,[r0,#0]  ; ki21
00003e  480b              LDR      r0,|L28.108|
000040  6800              LDR      r0,[r0,#0]  ; kp21
000042  f7fffffe          BL       vel_calculate_pwm
                  |L28.70|
;;;393    	}
;;;394    } 
000046  bd10              POP      {r4,pc}
;;;395    
                          ENDP

                  |L28.72|
                          DCD      r_count
                  |L28.76|
                          DCD      kd2
                  |L28.80|
                          DCD      ki2
                  |L28.84|
                          DCD      kp2
                  |L28.88|
                          DCD      ||id||
                  |L28.92|
                          DCD      ||ii||
                  |L28.96|
                          DCD      ||ip||
                  |L28.100|
                          DCD      kd21
                  |L28.104|
                          DCD      ki21
                  |L28.108|
                          DCD      kp21

                          AREA ||i.vel_zero||, CODE, READONLY, ALIGN=2

                  vel_zero PROC
;;;398    //sub function
;;;399    void vel_zero(void)
000000  2000              MOVS     r0,#0
;;;400    {
;;;401    	pwm=0;
000002  4902              LDR      r1,|L29.12|
000004  6008              STR      r0,[r1,#0]  ; pwm
;;;402    	dir=0;
000006  4902              LDR      r1,|L29.16|
000008  7008              STRB     r0,[r1,#0]
;;;403    }
00000a  4770              BX       lr
;;;404    //sub function
                          ENDP

                  |L29.12|
                          DCD      pwm
                  |L29.16|
                          DCD      ||dir||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  dcount_memory
                          %        80
                  histogram
                          %        28

                          AREA ||.data||, DATA, ALIGN=2

                  enable_bar
000000  00                DCB      0x00
                  enable_bar_memory
000001  000000            DCB      0x00,0x00,0x00
                  kp1
000004  41700000          DCFS     0x41700000 ; 15
                  ki1
000008  3ee66666          DCFS     0x3ee66666 ; 0.44999998807907104
                  kd1
00000c  41f00000          DCFS     0x41f00000 ; 30
                  kp2
000010  41700000          DCFS     0x41700000 ; 15
                  ki2
000014  3ee66666          DCFS     0x3ee66666 ; 0.44999998807907104
                  kd2
000018  41f00000          DCFS     0x41f00000 ; 30
                  ||ip||
00001c  40066666          DCFS     0x40066666 ; 2.0999999046325684
                  ||ii||
000020  3e0f5c29          DCFS     0x3e0f5c29 ; 0.14000000059604645
                  ||id||
000024  00000000          DCFS     0x00000000 ; 0
                  kp11
000028  41800000          DCFS     0x41800000 ; 16
                  ki11
00002c  3e99999a          DCFS     0x3e99999a ; 0.30000001192092896
                  kd11
000030  42f00000          DCFS     0x42f00000 ; 120
                  kp21
000034  41800000          DCFS     0x41800000 ; 16
                  ki21
000038  3e99999a          DCFS     0x3e99999a ; 0.30000001192092896
                  kd21
00003c  42f00000          DCFS     0x42f00000 ; 120
                  cal_P
000040  00000000          DCFS     0x00000000 ; 0
                  cal_I
000044  00000000          DCFS     0x00000000 ; 0
                  cal_D
000048  00000000          DCFS     0x00000000 ; 0
                  PID
00004c  00000000          DCFS     0x00000000 ; 0
                  err_curr
000050  00000000          DCFS     0x00000000 ; 0
                  err_prev1
000054  00000000          DCFS     0x00000000 ; 0
                  err_prev2
000058  00000000          DCFS     0x00000000 ; 0
                  err_total
00005c  00000000          DCFS     0x00000000 ; 0
                  abs_encoder
                          DCD      0x00000000
                  count
000064  00000000          DCFS     0x00000000 ; 0
                  r_count
000068  00000000          DCFS     0x00000000 ; 0
                  r_count_prev
00006c  00000000          DCFS     0x00000000 ; 0
                  d_count
000070  00000000          DCFS     0x00000000 ; 0
                  d_count_prev
000074  00000000          DCFS     0x00000000 ; 0
                  d_cal
000078  00000000          DCFS     0x00000000 ; 0
                  d_carrier
00007c  00000000          DCFS     0x00000000 ; 0
                  memory_index
000080  0000              DCW      0x0000
                  ||dir||
000082  0000              DCB      0x00,0x00
                  pwm
000084  00000000          DCFS     0x00000000 ; 0
                  pwm_init
000088  00000000          DCFS     0x00000000 ; 0
                  set_pwm
00008c  00000000          DCFS     0x00000000 ; 0
                  set_dir
000090  00                DCB      0x00
                  vel_reach
000091  000000            DCB      0x00,0x00,0x00
                  counter_memory
000094  00000000          DCFS     0x00000000 ; 0
                  counter_index
000098  0000              DCW      0x0000
00009a  0000              DCB      0x00,0x00
                  err_curr_pos
00009c  00000000          DCFS     0x00000000 ; 0
                  err_prev1_pos
0000a0  00000000          DCFS     0x00000000 ; 0
                  err_prev2_pos
0000a4  00000000          DCFS     0x00000000 ; 0
                  pos_init
0000a8  00000000          DCFS     0x00000000 ; 0
                  increment
0000ac  3f000000          DCFS     0x3f000000 ; 0.5
                  user_speed
0000b0  00000000          DCFS     0x00000000 ; 0
                  cali_done
0000b4  00000000          DCB      0x00,0x00,0x00,0x00
                  current_input
0000b8  00000000          DCFS     0x00000000 ; 0
                  ADC_offset
                          %        8
                  tim_counter
0000c4  0000              DCW      0x0000
0000c6  0000              DCB      0x00,0x00
                  I_cal_P
0000c8  00000000          DCFS     0x00000000 ; 0
                  I_cal_I
0000cc  00000000          DCFS     0x00000000 ; 0
                  I_cal_D
0000d0  00000000          DCFS     0x00000000 ; 0
                  I_PID
0000d4  00000000          DCFS     0x00000000 ; 0
                  I_err_curr
0000d8  00000000          DCFS     0x00000000 ; 0
                  I_err_prev1
0000dc  00000000          DCFS     0x00000000 ; 0
                  I_err_prev2
0000e0  00000000          DCFS     0x00000000 ; 0
                  current_stream
                          %        8
                  motor_current
0000ec  00000000          DCFS     0x00000000 ; 0
                  pwm_current
0000f0  00000000          DCFS     0x00000000 ; 0
                  max_current
0000f4  447a0000          DCFS     0x447a0000 ; 1000
                  r_cur
0000f8  00000000          DCFS     0x00000000 ; 0
