; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f10x_exti.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I"C:\Users\Kenneth Au\Desktop\toKenneth\Complicated Big Motor Control\(encoder)24V Big Blue Black Motor Control June 7\RTE" -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=513 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\obj\stm32f10x_exti.crf FWlib\SRC\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;200      */
;;;201    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;202    {
;;;203      /* Check the parameters */
;;;204      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;205      
;;;206      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;207    }
000004  4770              BX       lr
;;;208    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;241      */
;;;242    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;243    {
;;;244      /* Check the parameters */
;;;245      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;246      
;;;247      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;248    }
000004  4770              BX       lr
;;;249    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;84       */
;;;85     void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;86     {
;;;87       EXTI->IMR = 0x00000000;
000002  4906              LDR      r1,|L3.28|
000004  6008              STR      r0,[r1,#0]
;;;88       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;89       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;90       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;91       EXTI->PR = 0x0007FFFF;
000012  4803              LDR      r0,|L3.32|
000014  4901              LDR      r1,|L3.28|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;92     }
00001a  4770              BX       lr
;;;93     
                          ENDP

                  |L3.28|
                          DCD      0x40010400
                  |L3.32|
                          DCD      0x0007ffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;161      */
;;;162    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;163    {
;;;164      /* Check the parameters */
;;;165      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;166      
;;;167      EXTI->SWIER |= EXTI_Line;
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L4.12|
000008  6011              STR      r1,[r2,#0]
;;;168    }
00000a  4770              BX       lr
;;;169    
                          ENDP

                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;176      */
;;;177    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;178    {
;;;179      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;180      /* Check the parameters */
;;;181      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;182      
;;;183      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L5.20|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L5.16|
;;;184      {
;;;185        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L5.18|
                  |L5.16|
;;;186      }
;;;187      else
;;;188      {
;;;189        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L5.18|
;;;190      }
;;;191      return bitstatus;
;;;192    }
000012  4770              BX       lr
;;;193    
                          ENDP

                  |L5.20|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;215      */
;;;216    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;217    {
;;;218      ITStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;219      uint32_t enablestatus = 0;
000004  2200              MOVS     r2,#0
;;;220      /* Check the parameters */
;;;221      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;222      
;;;223      enablestatus =  EXTI->IMR & EXTI_Line;
000006  4b07              LDR      r3,|L6.36|
000008  681b              LDR      r3,[r3,#0]
00000a  ea030201          AND      r2,r3,r1
;;;224      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
00000e  4b05              LDR      r3,|L6.36|
000010  3314              ADDS     r3,r3,#0x14
000012  681b              LDR      r3,[r3,#0]
000014  400b              ANDS     r3,r3,r1
000016  b113              CBZ      r3,|L6.30|
000018  b10a              CBZ      r2,|L6.30|
;;;225      {
;;;226        bitstatus = SET;
00001a  2001              MOVS     r0,#1
00001c  e000              B        |L6.32|
                  |L6.30|
;;;227      }
;;;228      else
;;;229      {
;;;230        bitstatus = RESET;
00001e  2000              MOVS     r0,#0
                  |L6.32|
;;;231      }
;;;232      return bitstatus;
;;;233    }
000020  4770              BX       lr
;;;234    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;101      */
;;;102    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  7981              LDRB     r1,[r0,#6]
;;;103    {
;;;104      /* Check the parameters */
;;;105      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;106      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;107      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;108      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;109         
;;;110      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000002  2900              CMP      r1,#0
000004  d046              BEQ      |L7.148|
;;;111      {
;;;112        /* Clear EXTI line configuration */
;;;113        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000006  492a              LDR      r1,|L7.176|
000008  6809              LDR      r1,[r1,#0]
00000a  6802              LDR      r2,[r0,#0]
00000c  4391              BICS     r1,r1,r2
00000e  4a28              LDR      r2,|L7.176|
000010  6011              STR      r1,[r2,#0]
;;;114        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000012  1d11              ADDS     r1,r2,#4
000014  6809              LDR      r1,[r1,#0]
000016  6802              LDR      r2,[r0,#0]
000018  4391              BICS     r1,r1,r2
00001a  4a25              LDR      r2,|L7.176|
00001c  1d12              ADDS     r2,r2,#4
00001e  6011              STR      r1,[r2,#0]
;;;115        
;;;116        *(__IO uint32_t *)(EXTI_BASE + (uint32_t)EXTI_InitStruct->EXTI_Mode)|= EXTI_InitStruct->EXTI_Line;
000020  7901              LDRB     r1,[r0,#4]
000022  4a24              LDR      r2,|L7.180|
000024  4411              ADD      r1,r1,r2
000026  f8d11400          LDR      r1,[r1,#0x400]
00002a  6802              LDR      r2,[r0,#0]
00002c  4311              ORRS     r1,r1,r2
00002e  7902              LDRB     r2,[r0,#4]
000030  4b20              LDR      r3,|L7.180|
000032  441a              ADD      r2,r2,r3
000034  f8c21400          STR      r1,[r2,#0x400]
;;;117        /* Clear Rising Falling edge configuration */
;;;118        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000038  491d              LDR      r1,|L7.176|
00003a  3108              ADDS     r1,r1,#8
00003c  6809              LDR      r1,[r1,#0]
00003e  6802              LDR      r2,[r0,#0]
000040  4391              BICS     r1,r1,r2
000042  4a1b              LDR      r2,|L7.176|
000044  3208              ADDS     r2,r2,#8
000046  6011              STR      r1,[r2,#0]
;;;119        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000048  1d11              ADDS     r1,r2,#4
00004a  6809              LDR      r1,[r1,#0]
00004c  6802              LDR      r2,[r0,#0]
00004e  4391              BICS     r1,r1,r2
000050  4a17              LDR      r2,|L7.176|
000052  320c              ADDS     r2,r2,#0xc
000054  6011              STR      r1,[r2,#0]
;;;120        
;;;121        /* Select the trigger for the selected external interrupts */
;;;122        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000056  7941              LDRB     r1,[r0,#5]
000058  2910              CMP      r1,#0x10
00005a  d10e              BNE      |L7.122|
;;;123        {
;;;124          /* Rising Falling edge */
;;;125          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
00005c  1f11              SUBS     r1,r2,#4
00005e  6809              LDR      r1,[r1,#0]
000060  6802              LDR      r2,[r0,#0]
000062  4311              ORRS     r1,r1,r2
000064  4a12              LDR      r2,|L7.176|
000066  3208              ADDS     r2,r2,#8
000068  6011              STR      r1,[r2,#0]
;;;126          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
00006a  1d11              ADDS     r1,r2,#4
00006c  6809              LDR      r1,[r1,#0]
00006e  6802              LDR      r2,[r0,#0]
000070  4311              ORRS     r1,r1,r2
000072  4a0f              LDR      r2,|L7.176|
000074  320c              ADDS     r2,r2,#0xc
000076  6011              STR      r1,[r2,#0]
000078  e018              B        |L7.172|
                  |L7.122|
;;;127        }
;;;128        else
;;;129        {
;;;130          *(__IO uint32_t *)(EXTI_BASE + (uint32_t)EXTI_InitStruct->EXTI_Trigger)|= EXTI_InitStruct->EXTI_Line;
00007a  7941              LDRB     r1,[r0,#5]
00007c  4a0d              LDR      r2,|L7.180|
00007e  4411              ADD      r1,r1,r2
000080  f8d11400          LDR      r1,[r1,#0x400]
000084  6802              LDR      r2,[r0,#0]
000086  4311              ORRS     r1,r1,r2
000088  7942              LDRB     r2,[r0,#5]
00008a  4b0a              LDR      r3,|L7.180|
00008c  441a              ADD      r2,r2,r3
00008e  f8c21400          STR      r1,[r2,#0x400]
000092  e00b              B        |L7.172|
                  |L7.148|
;;;131        }
;;;132      }
;;;133      else
;;;134      {
;;;135        /* Disable the selected external lines */
;;;136        *(__IO uint32_t *)(EXTI_BASE + (uint32_t)EXTI_InitStruct->EXTI_Mode)&= ~EXTI_InitStruct->EXTI_Line;
000094  7901              LDRB     r1,[r0,#4]
000096  4a07              LDR      r2,|L7.180|
000098  4411              ADD      r1,r1,r2
00009a  f8d11400          LDR      r1,[r1,#0x400]
00009e  6802              LDR      r2,[r0,#0]
0000a0  4391              BICS     r1,r1,r2
0000a2  7902              LDRB     r2,[r0,#4]
0000a4  4b03              LDR      r3,|L7.180|
0000a6  441a              ADD      r2,r2,r3
0000a8  f8c21400          STR      r1,[r2,#0x400]
                  |L7.172|
;;;137      }
;;;138    }
0000ac  4770              BX       lr
;;;139    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L7.176|
                          DCD      0x40010400
                  |L7.180|
                          DCD      0x40010000

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;145      */
;;;146    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;147    {
;;;148      EXTI_InitStruct->EXTI_Line = EXTI_LineNone;
000002  6001              STR      r1,[r0,#0]
;;;149      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;150      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;151      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;152    }
00000e  4770              BX       lr
;;;153    
                          ENDP

