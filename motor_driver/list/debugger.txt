; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\debugger.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\debugger.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I"C:\Users\Kenneth Au\Desktop\toKenneth\Complicated Big Motor Control\(encoder)24V Big Blue Black Motor Control June 7\RTE" -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=513 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\obj\debugger.crf user\debugger.c]
                          THUMB

                          AREA ||i.debugger_msg||, CODE, READONLY, ALIGN=2

                  debugger_msg PROC
;;;159    
;;;160    void debugger_msg(void)
000000  b510              PUSH     {r4,lr}
;;;161    {					 
;;;162    //	clock2++;
;;;163    	send_debug_msg(1, ADC_ConvertedValue[0]);
000002  4909              LDR      r1,|L1.40|
000004  8808              LDRH     r0,[r1,#0]  ; ADC_ConvertedValue
000006  f7fffffe          BL       __aeabi_ui2f
00000a  4604              MOV      r4,r0
00000c  4621              MOV      r1,r4
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       send_debug_msg
;;;164    	send_debug_msg(2, ADC_ConvertedValue[1]);
000014  4904              LDR      r1,|L1.40|
000016  8848              LDRH     r0,[r1,#2]  ; ADC_ConvertedValue
000018  f7fffffe          BL       __aeabi_ui2f
00001c  4604              MOV      r4,r0
00001e  4621              MOV      r1,r4
000020  2002              MOVS     r0,#2
000022  f7fffffe          BL       send_debug_msg
;;;165    //	send_debug_msg(2, motor_current);
;;;166    //	send_debug_msg(1, d_count);
;;;167    //	send_debug_msg(1, current_input);
;;;168    //	send_debug_msg(1, d_cal);
;;;169    //	send_debug_msg(3, r_count);		  
;;;170    
;;;171    	/*
;;;172    	if (clock2%100<6)
;;;173    	{
;;;174    		send_debug_msg(clock2%100+1, clock2);
;;;175    	}
;;;176    	*/
;;;177    
;;;178    }
000026  bd10              POP      {r4,pc}
                          ENDP

                  |L1.40|
                          DCD      ADC_ConvertedValue

                          AREA ||i.send_3_floats||, CODE, READONLY, ALIGN=2

                  send_3_floats PROC
;;;100    
;;;101    void send_3_floats(u8 cmd, float* data1, float* data2, float* data3)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;102    {
000004  4682              MOV      r10,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
;;;103        u8 *tmp1 = (u8 *) data1;
00000c  4627              MOV      r7,r4
;;;104    	u8 *tmp2 = (u8 *) data2;
00000e  46a8              MOV      r8,r5
;;;105    	u8 *tmp3 = (u8 *) data3;
000010  46b1              MOV      r9,r6
;;;106    
;;;107    	tx_buffer[tx_buffer_token]=cmd;
000012  483e              LDR      r0,|L2.268|
000014  493e              LDR      r1,|L2.272|
000016  7809              LDRB     r1,[r1,#0]  ; tx_buffer_token
000018  f800a001          STRB     r10,[r0,r1]
;;;108    	update_token();
00001c  f7fffffe          BL       update_token
;;;109    
;;;110    	tx_buffer[tx_buffer_token]=tmp1[0];
000020  7838              LDRB     r0,[r7,#0]
000022  493a              LDR      r1,|L2.268|
000024  4a3a              LDR      r2,|L2.272|
000026  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000028  5488              STRB     r0,[r1,r2]
;;;111    	update_token();
00002a  f7fffffe          BL       update_token
;;;112    	tx_buffer[tx_buffer_token]=tmp1[1];
00002e  7879              LDRB     r1,[r7,#1]
000030  4836              LDR      r0,|L2.268|
000032  4a37              LDR      r2,|L2.272|
000034  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000036  5481              STRB     r1,[r0,r2]
;;;113    	update_token();
000038  f7fffffe          BL       update_token
;;;114    	tx_buffer[tx_buffer_token]=tmp1[2];
00003c  78b8              LDRB     r0,[r7,#2]
00003e  4933              LDR      r1,|L2.268|
000040  4a33              LDR      r2,|L2.272|
000042  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000044  5488              STRB     r0,[r1,r2]
;;;115    	update_token();
000046  f7fffffe          BL       update_token
;;;116    	tx_buffer[tx_buffer_token]=tmp1[3];
00004a  78f8              LDRB     r0,[r7,#3]
00004c  492f              LDR      r1,|L2.268|
00004e  4a30              LDR      r2,|L2.272|
000050  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000052  5488              STRB     r0,[r1,r2]
;;;117    	update_token();
000054  f7fffffe          BL       update_token
;;;118    
;;;119    	tx_buffer[tx_buffer_token]=tmp2[0];
000058  f8981000          LDRB     r1,[r8,#0]
00005c  482b              LDR      r0,|L2.268|
00005e  4a2c              LDR      r2,|L2.272|
000060  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000062  5481              STRB     r1,[r0,r2]
;;;120    	update_token();
000064  f7fffffe          BL       update_token
;;;121    	tx_buffer[tx_buffer_token]=tmp2[1];
000068  f8980001          LDRB     r0,[r8,#1]
00006c  4927              LDR      r1,|L2.268|
00006e  4a28              LDR      r2,|L2.272|
000070  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000072  5488              STRB     r0,[r1,r2]
;;;122    	update_token();
000074  f7fffffe          BL       update_token
;;;123    	tx_buffer[tx_buffer_token]=tmp2[2];
000078  f8980002          LDRB     r0,[r8,#2]
00007c  4923              LDR      r1,|L2.268|
00007e  4a24              LDR      r2,|L2.272|
000080  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000082  5488              STRB     r0,[r1,r2]
;;;124    	update_token();
000084  f7fffffe          BL       update_token
;;;125    	tx_buffer[tx_buffer_token]=tmp2[3];
000088  f8980003          LDRB     r0,[r8,#3]
00008c  491f              LDR      r1,|L2.268|
00008e  4a20              LDR      r2,|L2.272|
000090  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000092  5488              STRB     r0,[r1,r2]
;;;126    	update_token();
000094  f7fffffe          BL       update_token
;;;127    
;;;128    	tx_buffer[tx_buffer_token]=tmp3[0];
000098  f8990000          LDRB     r0,[r9,#0]
00009c  491b              LDR      r1,|L2.268|
00009e  4a1c              LDR      r2,|L2.272|
0000a0  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
0000a2  5488              STRB     r0,[r1,r2]
;;;129    	update_token();
0000a4  f7fffffe          BL       update_token
;;;130    	tx_buffer[tx_buffer_token]=tmp3[1];
0000a8  f8990001          LDRB     r0,[r9,#1]
0000ac  4917              LDR      r1,|L2.268|
0000ae  4a18              LDR      r2,|L2.272|
0000b0  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
0000b2  5488              STRB     r0,[r1,r2]
;;;131    	update_token();
0000b4  f7fffffe          BL       update_token
;;;132    	tx_buffer[tx_buffer_token]=tmp3[2];
0000b8  f8990002          LDRB     r0,[r9,#2]
0000bc  4913              LDR      r1,|L2.268|
0000be  4a14              LDR      r2,|L2.272|
0000c0  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
0000c2  5488              STRB     r0,[r1,r2]
;;;133    	update_token();
0000c4  f7fffffe          BL       update_token
;;;134    	tx_buffer[tx_buffer_token]=tmp3[3];
0000c8  f8991003          LDRB     r1,[r9,#3]
0000cc  480f              LDR      r0,|L2.268|
0000ce  4a10              LDR      r2,|L2.272|
0000d0  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
0000d2  5481              STRB     r1,[r0,r2]
;;;135    	update_token();
0000d4  f7fffffe          BL       update_token
;;;136    
;;;137    	tx_buffer[tx_buffer_token]=stop_byte1;
0000d8  20fe              MOVS     r0,#0xfe
0000da  490c              LDR      r1,|L2.268|
0000dc  4a0c              LDR      r2,|L2.272|
0000de  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
0000e0  5488              STRB     r0,[r1,r2]
;;;138    	update_token();
0000e2  f7fffffe          BL       update_token
;;;139    	tx_buffer[tx_buffer_token]=stop_byte2;
0000e6  20ff              MOVS     r0,#0xff
0000e8  4908              LDR      r1,|L2.268|
0000ea  4a09              LDR      r2,|L2.272|
0000ec  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
0000ee  5488              STRB     r0,[r1,r2]
;;;140    	update_token();
0000f0  f7fffffe          BL       update_token
;;;141    
;;;142    	tx_data_size=15;
0000f4  200f              MOVS     r0,#0xf
0000f6  4907              LDR      r1,|L2.276|
0000f8  7008              STRB     r0,[r1,#0]
;;;143    	USART_ITConfig(USART3, USART_IT_TC, ENABLE);
0000fa  2201              MOVS     r2,#1
0000fc  f2406126          MOV      r1,#0x626
000100  4805              LDR      r0,|L2.280|
000102  f7fffffe          BL       USART_ITConfig
;;;144    }
000106  e8bd87f0          POP      {r4-r10,pc}
;;;145    
                          ENDP

00010a  0000              DCW      0x0000
                  |L2.268|
                          DCD      tx_buffer
                  |L2.272|
                          DCD      tx_buffer_token
                  |L2.276|
                          DCD      tx_data_size
                  |L2.280|
                          DCD      0x40004800

                          AREA ||i.send_debug_msg||, CODE, READONLY, ALIGN=2

                  send_debug_msg PROC
;;;52     
;;;53     void send_debug_msg(u8 index, float data)
000000  b573              PUSH     {r0,r1,r4-r6,lr}
;;;54     {
000002  4605              MOV      r5,r0
;;;55         u8 *tmp = (u8 *) &data;
000004  ac01              ADD      r4,sp,#4
;;;56     	tx_buffer[tx_buffer_token]=send_float32_cmd + index;
000006  f1050031          ADD      r0,r5,#0x31
00000a  491d              LDR      r1,|L3.128|
00000c  4a1d              LDR      r2,|L3.132|
00000e  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000010  5488              STRB     r0,[r1,r2]
;;;57     	update_token();
000012  f7fffffe          BL       update_token
;;;58     
;;;59     	tx_buffer[tx_buffer_token]=tmp[0];
000016  7820              LDRB     r0,[r4,#0]
000018  4919              LDR      r1,|L3.128|
00001a  4a1a              LDR      r2,|L3.132|
00001c  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00001e  5488              STRB     r0,[r1,r2]
;;;60     	update_token();
000020  f7fffffe          BL       update_token
;;;61     	tx_buffer[tx_buffer_token]=tmp[1];
000024  7861              LDRB     r1,[r4,#1]
000026  4816              LDR      r0,|L3.128|
000028  4a16              LDR      r2,|L3.132|
00002a  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00002c  5481              STRB     r1,[r0,r2]
;;;62     	update_token();
00002e  f7fffffe          BL       update_token
;;;63     	tx_buffer[tx_buffer_token]=tmp[2];
000032  78a0              LDRB     r0,[r4,#2]
000034  4912              LDR      r1,|L3.128|
000036  4a13              LDR      r2,|L3.132|
000038  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00003a  5488              STRB     r0,[r1,r2]
;;;64     	update_token();
00003c  f7fffffe          BL       update_token
;;;65     	tx_buffer[tx_buffer_token]=tmp[3];
000040  78e0              LDRB     r0,[r4,#3]
000042  490f              LDR      r1,|L3.128|
000044  4a0f              LDR      r2,|L3.132|
000046  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000048  5488              STRB     r0,[r1,r2]
;;;66     	update_token();
00004a  f7fffffe          BL       update_token
;;;67     
;;;68     	tx_buffer[tx_buffer_token]=stop_byte1;
00004e  21fe              MOVS     r1,#0xfe
000050  480b              LDR      r0,|L3.128|
000052  4a0c              LDR      r2,|L3.132|
000054  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000056  5481              STRB     r1,[r0,r2]
;;;69     	update_token();
000058  f7fffffe          BL       update_token
;;;70     	tx_buffer[tx_buffer_token]=stop_byte2;
00005c  21ff              MOVS     r1,#0xff
00005e  4808              LDR      r0,|L3.128|
000060  4a08              LDR      r2,|L3.132|
000062  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000064  5481              STRB     r1,[r0,r2]
;;;71     	update_token();
000066  f7fffffe          BL       update_token
;;;72     
;;;73         tx_data_size=7;
00006a  2007              MOVS     r0,#7
00006c  4906              LDR      r1,|L3.136|
00006e  7008              STRB     r0,[r1,#0]
;;;74     	USART_ITConfig(USART3, USART_IT_TC, ENABLE);
000070  2201              MOVS     r2,#1
000072  f2406126          MOV      r1,#0x626
000076  4805              LDR      r0,|L3.140|
000078  f7fffffe          BL       USART_ITConfig
;;;75     }
00007c  bd7c              POP      {r2-r6,pc}
;;;76     
                          ENDP

00007e  0000              DCW      0x0000
                  |L3.128|
                          DCD      tx_buffer
                  |L3.132|
                          DCD      tx_buffer_token
                  |L3.136|
                          DCD      tx_data_size
                  |L3.140|
                          DCD      0x40004800

                          AREA ||i.send_float||, CODE, READONLY, ALIGN=2

                  send_float PROC
;;;76     
;;;77     void send_float(u8 cmd, float* data)
000000  b570              PUSH     {r4-r6,lr}
;;;78     {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;79         u8 *tmp = (u8 *) data;
000006  4625              MOV      r5,r4
;;;80     	tx_buffer[tx_buffer_token]=cmd;
000008  481c              LDR      r0,|L4.124|
00000a  491d              LDR      r1,|L4.128|
00000c  7809              LDRB     r1,[r1,#0]  ; tx_buffer_token
00000e  5446              STRB     r6,[r0,r1]
;;;81     	update_token();
000010  f7fffffe          BL       update_token
;;;82     
;;;83     	tx_buffer[tx_buffer_token]=tmp[0];
000014  7828              LDRB     r0,[r5,#0]
000016  4919              LDR      r1,|L4.124|
000018  4a19              LDR      r2,|L4.128|
00001a  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00001c  5488              STRB     r0,[r1,r2]
;;;84     	update_token();
00001e  f7fffffe          BL       update_token
;;;85     	tx_buffer[tx_buffer_token]=tmp[1];
000022  7869              LDRB     r1,[r5,#1]
000024  4815              LDR      r0,|L4.124|
000026  4a16              LDR      r2,|L4.128|
000028  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00002a  5481              STRB     r1,[r0,r2]
;;;86     	update_token();
00002c  f7fffffe          BL       update_token
;;;87     	tx_buffer[tx_buffer_token]=tmp[2];
000030  78a8              LDRB     r0,[r5,#2]
000032  4912              LDR      r1,|L4.124|
000034  4a12              LDR      r2,|L4.128|
000036  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000038  5488              STRB     r0,[r1,r2]
;;;88     	update_token();
00003a  f7fffffe          BL       update_token
;;;89     	tx_buffer[tx_buffer_token]=tmp[3];
00003e  78e9              LDRB     r1,[r5,#3]
000040  480e              LDR      r0,|L4.124|
000042  4a0f              LDR      r2,|L4.128|
000044  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000046  5481              STRB     r1,[r0,r2]
;;;90     	update_token();
000048  f7fffffe          BL       update_token
;;;91     
;;;92     	tx_buffer[tx_buffer_token]=stop_byte1;
00004c  21fe              MOVS     r1,#0xfe
00004e  480b              LDR      r0,|L4.124|
000050  4a0b              LDR      r2,|L4.128|
000052  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000054  5481              STRB     r1,[r0,r2]
;;;93     	update_token();
000056  f7fffffe          BL       update_token
;;;94     	tx_buffer[tx_buffer_token]=stop_byte2;
00005a  21ff              MOVS     r1,#0xff
00005c  4807              LDR      r0,|L4.124|
00005e  4a08              LDR      r2,|L4.128|
000060  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
000062  5481              STRB     r1,[r0,r2]
;;;95     	update_token();
000064  f7fffffe          BL       update_token
;;;96     
;;;97         tx_data_size=7;
000068  2007              MOVS     r0,#7
00006a  4906              LDR      r1,|L4.132|
00006c  7008              STRB     r0,[r1,#0]
;;;98     	USART_ITConfig(USART3, USART_IT_TC, ENABLE);
00006e  2201              MOVS     r2,#1
000070  f2406126          MOV      r1,#0x626
000074  4804              LDR      r0,|L4.136|
000076  f7fffffe          BL       USART_ITConfig
;;;99     }
00007a  bd70              POP      {r4-r6,pc}
;;;100    
                          ENDP

                  |L4.124|
                          DCD      tx_buffer
                  |L4.128|
                          DCD      tx_buffer_token
                  |L4.132|
                          DCD      tx_data_size
                  |L4.136|
                          DCD      0x40004800

                          AREA ||i.system_shake_hand||, CODE, READONLY, ALIGN=2

                  system_shake_hand PROC
;;;37     
;;;38     void system_shake_hand (u8 shake)
000000  b510              PUSH     {r4,lr}
;;;39     {
000002  4604              MOV      r4,r0
;;;40     	connect_state = shake;
000004  480f              LDR      r0,|L5.68|
000006  7004              STRB     r4,[r0,#0]
;;;41     	tx_buffer[tx_buffer_token]=shake;
000008  480f              LDR      r0,|L5.72|
00000a  4910              LDR      r1,|L5.76|
00000c  7809              LDRB     r1,[r1,#0]  ; tx_buffer_token
00000e  5444              STRB     r4,[r0,r1]
;;;42     	update_token();
000010  f7fffffe          BL       update_token
;;;43     	tx_buffer[tx_buffer_token]=stop_byte1;
000014  21fe              MOVS     r1,#0xfe
000016  480c              LDR      r0,|L5.72|
000018  4a0c              LDR      r2,|L5.76|
00001a  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00001c  5481              STRB     r1,[r0,r2]
;;;44     	update_token();
00001e  f7fffffe          BL       update_token
;;;45     	tx_buffer[tx_buffer_token]=stop_byte2;
000022  21ff              MOVS     r1,#0xff
000024  4808              LDR      r0,|L5.72|
000026  4a09              LDR      r2,|L5.76|
000028  7812              LDRB     r2,[r2,#0]  ; tx_buffer_token
00002a  5481              STRB     r1,[r0,r2]
;;;46     	update_token();
00002c  f7fffffe          BL       update_token
;;;47         tx_data_size=3;
000030  2003              MOVS     r0,#3
000032  4907              LDR      r1,|L5.80|
000034  7008              STRB     r0,[r1,#0]
;;;48     	USART_ITConfig(USART3, USART_IT_TC, ENABLE);
000036  2201              MOVS     r2,#1
000038  f2406126          MOV      r1,#0x626
00003c  4805              LDR      r0,|L5.84|
00003e  f7fffffe          BL       USART_ITConfig
;;;49     
;;;50     }
000042  bd10              POP      {r4,pc}
;;;51     
                          ENDP

                  |L5.68|
                          DCD      connect_state
                  |L5.72|
                          DCD      tx_buffer
                  |L5.76|
                          DCD      tx_buffer_token
                  |L5.80|
                          DCD      tx_data_size
                  |L5.84|
                          DCD      0x40004800

                          AREA ||i.update_token||, CODE, READONLY, ALIGN=2

                  update_token PROC
;;;29     
;;;30     void update_token(void)
000000  4805              LDR      r0,|L6.24|
;;;31     {
;;;32         tx_buffer_token++;
000002  7800              LDRB     r0,[r0,#0]  ; tx_buffer_token
000004  1c40              ADDS     r0,r0,#1
000006  4904              LDR      r1,|L6.24|
000008  7008              STRB     r0,[r1,#0]
;;;33     	
;;;34     	if (tx_buffer_token>buf_size-1)
00000a  4608              MOV      r0,r1
00000c  7800              LDRB     r0,[r0,#0]  ; tx_buffer_token
00000e  28c7              CMP      r0,#0xc7
000010  dd01              BLE      |L6.22|
;;;35     	    tx_buffer_token=0;
000012  2000              MOVS     r0,#0
000014  7008              STRB     r0,[r1,#0]
                  |L6.22|
;;;36     }
000016  4770              BX       lr
;;;37     
                          ENDP

                  |L6.24|
                          DCD      tx_buffer_token

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  float32
                          %        24

                          AREA ||.data||, DATA, ALIGN=2

                  _start
000000  00                DCB      0x00
                  _dir
000001  00                DCB      0x00
                  conversion
000002  0000              DCB      0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  clock2
                          DCD      0x00000000
